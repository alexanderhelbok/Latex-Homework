(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    146077,       2723]
NotebookOptionsPosition[    143896,       2678]
NotebookOutlinePosition[    144335,       2695]
CellTagsIndexPosition[    144292,       2692]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Ex.3 a)", "Title",
 CellChangeTimes->{{3.926953951599112*^9, 
  3.92695397870039*^9}},ExpressionUUID->"e64daa3b-7f7a-4725-8226-\
e9c022b93138"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "[", 
   RowBox[{"e_", ",", "T_"}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"e", "-", "1"}], ")"}], "/", "T"}], "]"}], "+", "1"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "[", 
      RowBox[{"e", ",", "0.01"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{"e", ",", "0.1"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{"e", ",", "0.2"}], "]"}], ",", 
     RowBox[{"n", "[", 
      RowBox[{"e", ",", "0.5"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"e", ",", "0", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotLegends", "->", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[Beta]=0.01\>\"", ",", "\"\<\[Beta]=0.1\>\"", ",", 
      "\"\<\[Beta]=0.2\>\"", ",", "\"\<\[Beta]=0.5\>\""}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "->", 
    RowBox[{"{", 
     RowBox[{"\"\<\[Epsilon] (\[Mu])\>\"", ",", "\"\<n\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.9269114647238493`*^9, 3.926911865866235*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"9fa745d2-b54f-434a-98f9-8e60af8d5f0b"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    InterpretationBox[{
      TagBox[{{{}, {}, 
         TagBox[{
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJw913c819//P34is2EkURJJSJFk1PPxuJdINqFsEiVpWJVKMkKIIiOjzIyo
ZEtRkZWRLZtCnnuR/X0835/f7/X853m5Xh6X53mec27nfs55SDnfOOu6gY2N
jZODjY31re86+7PuryvK9r8PBdJFTEIjxJ7D/+9AnpL9j8Wy/7OVdcY7CrX0
P/OvB9rp7q79z/vMSLPfIuv/8+12TUhiNP9n0VLBUXb2jv9cPnnqRweu6z9/
dU/baU3o+c9MWWRr0bX+/7xh8Y3Azn2//rPaulO5+dvh//wjRLX9u8LYf5Z8
il/MJ43/Z/zC2Giv8uR/zp772LIleuo/DwYfHvHT/P2ft0jkkn///g3/1lkf
MhidOvTma8gfaPn/HHWl7FK6zDSErv2fT1q+z+HsmoY6+v95/sSb324BM2Ca
/H8uq6r4AVKz8Fl69X/2Uakv3f5tFtKt8P9zwU3tPT5ef+Ghpen/PPa2PvKn
1ByIzckvsZxe0LDpvPocJGy48o9l59ffnwwbzgH3cal5lmUyG7c4O8+ByWYF
OsvTaU0xM7fn4PJ3YzLLjTv1TAuC5kCTME9gOe9Fs8C1J3PQPaI/x/JjUf2f
SklzgDSjMyy7x7c8o2XOQeORhimWbXr4aOZ5c1D66tcEywbCBmfLiubA9HP7
GMu4s5EftpfMwYThqxGWFZ+1Ct2pnAOnCb0hlnd18nsPfpqDgZnWAZY3bTXs
PvZtDsJeSfexTIz6EbfaNgfLilqdLI+2bmI4dM/BzxDONpbb+Yws6gbmoDki
upnlz3pPSqVG50DBY7iB5bfhbduCp+agXnjuC8svGzf7/p6dA/99JZ9YjuEy
7tUhzYHnokoVyzdD2uN5FufA663WO5advm2Zv7KG9e95Yz7LZhtMzrVy4IEb
R8xiWetkTLkiLx5aFIvSWFZ52LE9egsengSwJbIsXbv1NlkYD196xmJYFl4z
6TcVw0Op4alwlhn3OhOFZfCQddPnNsu/qwX++cjjQT9S6TrLvYumVn2H8BD+
TM+F5e8azyrVVfGw/XmFNcvlt3/ueKGJh+I/14xZfl0u6LeE4kF6i5MWy4lM
s0FbbTw8qnl4lOU73l0vdpvgoalLWIxltw9CSwEWeCB0X+Jl2Zp61mbCGg9j
7vn/1jDrK8dVazniIUaseZrlYze6xbNd8JC050M3ywpvhe9tdMeDyxWTWpbF
ieZDl27g4c/1iHyWl917UuTv4uH+8G0/li3U7J8dCsBDWEqLE8uF7NOhR0Lw
EHso+jTLG9uu39d4jIdUu3wFlh2SFjyRaDzkWrBvZrni4sPLWnFYf+P8iKuY
BZR47XWT8HCzhd7K8pcG8TNmmXioUrgaxLL4syzkXC4euLKkbFj2slM8YluI
h7yrhkost+4vk3MqxsPSua/sLMvQkd2u5XjQSjv/cwWz/+fvwu4fsfF/GElj
ue+xCe+NOjxsEt97meWwPRcYd1rwwCG6nbyMeRz/969/Bx6+apkWsaxR4TUW
1IMHzQfOl1l+FrTcEzaIh1MxvBIszxmFtESN4gFWVtuWMJ8S21z3bAoPbo10
P5ZTf8eXJcxi7e1L3sOy0b3c9HQaHoQSU+wWWXmfVk7IWcDyRo9R/2FeE6yK
LFjBgzd+awDL50dOBr5jJwDP6NuNLL/Pa7lVykWAGNfMkAXMvD7mHlX8BFD3
ur48z9o/YPjCZwECuEvEXGFZuI9o2CROgLCg5/JMzB4Zt7TaJAnw9ZXOXQbm
eo919S4ZAjxYmqylY5bQCD/YL0+Aqy5VizTMtzgE9w4fIgDZjm8/yx3tL3ZM
HCHAJht+XSpmuWTpLdMaBHi98Y8VBfOgsuoiWYsAFooPjUmselqpITF0CZDq
a6BMxBzRqPN70RAbz352NgLmqdj2wTUzAvyrvl8zx9pvHM53cJwngIlymMtf
zPHy4/U8dgR4MtY7P4OZxHCr3nyBAEs4Xq9pzK8i7+aIXiUAzV5JYgrzv3Mc
KbtuEkD0DElvArOpdNRTKV8CVIrttx7DnE/cFip7lwC2p1fOjGDeUJV270AA
AcpFvESHMNuGyHoqhxDgw0ePrwOYS03eXTr6GPu92VvdPsyu03VmEEeA3ZLn
+ztZ+1Wxnq52EgHmKcHDbZi3+3fh9NKw9ib8i1sw3zhjq2KcSQAvW03zRsxN
wr/3m+cSQD/c7/M3zFJjHhJWhQTYrtZGrsV8t4ApZF9MgNawyKmPmA+c5F67
9JEAVst3NpSw8i94s3+gjgCXKqsrizCrbjM10/tOgOEjG4TyMFf6M+5WtxKg
pJnAncmaz5mk7AM/CeCUlBuXgrnOFGlP7SNA3o+ZoueYdaonFjYPE0Di0qTx
E8zGTxQMKNMEuBUkw+GPuWu+3ecCAWt/ZgOnD2s9Onm/7KISwPp96SV3zMPN
ok2nFgigfNZ+jxNrvz1SQy1dwfK+eGGfJWs/THXaKbuBCElB1lf0MF/h2qiT
yE2EhXOcYzhWPQ8aJfkJEeGBWuc+Kdb5qkX7MidKhCucGf2CmO8VJuBtJYig
Xet0nx0z2/bjIm3SRIi6mcBOWSNDSMAYisoR4WJWiPkIZp6/wW7vDhIhUlbY
vhnzk7NysXuOEIFdr4K7FHPCPs8/G1Ai2OyA0RDM4jEiW31OESE7earHHfOr
f1Uaf84QwfrOFLsJZhlnB+dzxkQ4Jt+ncxhzXuuGqEZzItxsPxAgiFnxaG6Z
hjURZG9xR5BXsXxeGozlO2Dj+bH9RCvmKs/nKlFXiKDOrc59DzM6pGG3ep0I
G1cbPhlj/qo98ui6DxHElSXdJTGffhv4bsyPCIGDE32EFTK0iMoOmgYQodpi
Y2s5ZuPAlg1fQ4jQeewFrz/m7rnrikciiEDdH2gGmIc/VQSIxBOhMkpnsnwZ
y2O/XX5oMhHuZ7s8u4r5z1O27oVXRNhuWiyyE7P7UvaKWw4RrtaFbmtYwurr
op7srwJs/Ae2HLyC2auNaGLwngjhS10LXJgX1GL9asqIgK824Xq5iOXBN/Tj
ZR0Rmtl2byn/h+XhHTC/9TsRgmLiN6hh5h3ZuyewFXuOUpSKFsgQfbpJj9ZJ
hOgy3xVxzELvPbwv9mH5uDC/PZjH8hETTOsZIsJAtmB/P5MMO4PLvutMEKF3
+sHdfZhlzq2JyRGIQM55oZ1Cx/KozTz1gkoEtsHI4i80MhyU173Gt0AEAb1b
moNUMnyIxSfcWyHCev+JgXEKGdRWYuoI7CS4kaB+p59MhmpX1Tl7bhKQLo9S
PpKwfDoGhDs2keCqefHGJ0Qy6GZKXS4WJcHz3Pgc8hxWb0lbZL/vIsEtHv7I
xL9k2BO9/PuXFAmKjaMj5WfJsDlkNossS4LP9bna2dNkWPLrdeZUJEH1q08I
1x8yzNz4KiV2mAS5TR+njabI0OP6bvygGgnW2PIS/CbIUGT22OH8CRKYprRM
+I6QIVn3loSHDgnif6Wmaw2RIRS5OPxQnwSHDskU4AfI4H3ENCXehARtkZl1
1/uwvOURmwILEryIFgtu7sbOG0kFsVprEpAjNa8udmLnv4joQLcD1n/+o63L
bdj5wE61XHUjgchlcPNoxPJcGNkmdJ0EaKbojZ5vZCAQWrplvUnw6I3q/Q11
2P4+WRF7/A4Jpq69W6B9xO4zA9lmpv4kKHdOF8qsIENJ+zMB1yASeJwTq+cv
we639Q86/MJIcDltteHAWzL4vbcyynpGgl6ZLrv7WWS49FpnU2UCCc4FO4tk
pZHhbKpK648UErxUcXHwSCQDxEpGTKSTwL5+OrLrKVZv4Zv05nNIMF8r/arj
MRnEHixy878hQUnTTS37IDJw+Ux/l3xPAjc92Qafu9h927FOW6+aBCOkxAaZ
K2T4YVnE4VCL5XvKn1HkiO2XBslfvepJcFDA0i7Tkgw5J8MCw5pJUGmXp72o
T4ZYdZ8Tqe0kGIztCcgHMgQcvLD+vhvL71vhpfwj2Hm61/hzwwAJLvIr95Bk
sf10qxyOPEmCN+46UpL82Pm3UWSZY5YE1lsOStCXSbB7mb16B5EEr7xVf47i
SfBvekhda4EEMS/5HzQ3keDPcNP8uRUSbJrPEC4qI0FXV1nZVXYyZE8bJnpm
YO1+jjkSj7X7TJdPwcmXBEml92n5Ati+9Xhqj7s9CUIKrhR/FsHugZIFA9u0
SeCQcEppVhJ7bjEoyLWZBAZRyqQVGaxuTtiyyZGJoBEkUSSogJ1rRflJGR1E
ELy+oHBclQz2S3u8jCKJsHbx918TTTI8HXVLPH+JCHPWP/NcUDJ0ntMxvgJE
qNd5Ixt9hgzFq8+DTfEEKD6e9CfTCDtXPYftVj4R4OXhR9kVZ8lgV3O2xC6a
ALclHKUn7MiwuyFM4e9+AjibKp8bvoCdS7eMdXiwe5FxMHtE/yVsHpU0xl5X
4UH2bxa17SYZRCZ4d0iexO5Nu3z3NfuSgcZNDR1kw8Oq8WnreixnksQm717s
PaSndLauOoQMjq97cp2V5qBupopRhq0TlQyj8fGpv/BGPFKuOBrrn/742N34
vxD08ODT3CTsHH9QYsYgz4KyoZfj80IyvDitR1INmoFdAafiYoqxdWFzkFIl
OQPcH7Y1RpRj9+5bS7jI6mkYFa04FIjVxV8HJVX32T8QNbW8eq0He097nByp
J/cbZu8+StXF9uVPtmmvVu3GYe7cAbcM7D00iScvnV43Bk4U4Q2SHBToqnzT
zds0CgZ7/xwV56FA6s7UNy4DwyD9OCxNQIgCf/MYn49vGYQk6Zvq0dsoIHLD
UiRMegC21Fj95BelgN+bDG2zY/2wSJLfyL2LAkjvrpUq317otPjhsbqPAt1S
4Xote7vgNKmU654cBX492B8iY/cTasLS0v8pUOD+xfisfy86Ibf6eg9diQLK
RI7XPEbtsMvi/HVPFQqc1LG92zr3A2KJwENWpcDiom6iwvNWeLBHEDenSQEd
ruTfQ7zNwKha7L2Mo8AfNet0qb5GcDefvPEHpQD99YQpoeg7WIaWZI2fogDP
D/3KmIB6aJFMRRxOU+AiN9/LbX7f4ERVSP/QGQqkFDXdv+P/FRQJlvz9RhQo
ua3RTM2pg0oLw9oIUwpczm8sjb5eC6c+aXmj5hSIEfTyd837BDbRSkM5VhT4
8voFW45DNUzP74uxtqWAhciekPDBSvBy3HVqswMFyM3Nnk/dKuCxMu8bn4sU
cH4UwkGoLYVtL9Yd5C5R4Pu0tcj70BJIZ58XGnajgJLB49v3HD5AZdfk3VPX
KZCT7PlHGn0P2scHDy3cpEDrPeof/sdvoSOrY7LAmwLlwocG14oLYdqnRl/I
jwKbeYNLqGfzwWvkw1rDPWx+DJLvmTblwqpO/ge/BxRwv+VammzxGsLfvrp0
MJACGmji3rT5bNgmmiA+EUyB9jcb0pWLsiA9IKr9eSgFNvERxI7dzgTF2aCg
M48pwFwYiC4wz4BTVTfm3kVjzyfFvwQEvIR2qUsvLz6jwOgwlxFHSirYRNid
FX1OgWtLx+82difDNO0sV2sCBbKFpo5Lyb3A7ql61Q9eYOvPULfnbkIirH2D
6yqpFLjh4LvPXCIBHiuqSU+/xPrzy3QJ9/E5pK9KRxhlU+B8tOg9slosKF4S
Q9lzKbAr7/DLY0LPoKJ9K600nwKVYZEuR9djQEud67VbIQVid179zlx+Au2v
Vqx3vaNAbptPypsdUWDDQ9/cWUyBo7d9oq6YR8D0zb9fgksp8EbLW9ehIBxW
T/bJ46sooHh6tETh9SMIL/gx8rKGAv1d0fljuiGwTfjbs7O1FJhryLoUvB4E
6feqdLi+UoAr9Md4TWsgKP5+t1hVTwHrXkFf3TcPodLwddG1RgqYa4UlTWkG
wKmy1AtSLdj8laokaoI/2IQ+bg7vwNrTbl5OzvWDaVKAP66LAlHNb6Pbue6A
5/lbhyk9FHCyRFRNH96ClVqPP1n9FGDbuDvsnpAvhMtdfHH+FzZfO/06Gj56
w7Zn1kb8IxSIi3EOrrnrBa8WTdhrxyjQc8F9iMPYE8pbcFdk/2D1TPEwW7O6
DlpHjkj8mqFA5OBJ9Ju7B7SlyP98MkeB/TIWraMp7mDFuefRSSK2/g4QHp6f
c4PfHts1mWQK2JvssDG3uAw3ezcR82gU8Fi8NCwy4AorCEeGHZMCKlNvDNa8
XUB4K4WnfokConU3clHSBej6FBGmt0qBCmXGma/DThDrsY+rYx2b39UCfaEK
Rzi7sy7EYgMVtC8x1TW77UGoxYbjFycV0nWCxeQ32UHXHWagIzcVGCe62A86
2UDs/qdsf3ipsOq6ty6/zQqEHjWskrdQYW9O0/cdZEvoOuJ031eQCogSwfRM
ugXETi4tLQlTwTze6aWbqzmcfRbv93A7Fepnku30kbMgeEL530YxKowcAIVO
WTPoJLXcitxJBVXZvsfEPabwNM2VKbCbClwf+ZoMLI1BYDmZtnMvFdzjyjQe
dOlDZ/5Rz4x9VFg+tN1oWEMPnlp1kmXlqCB1+m57ToUumHJfvV6oQIWjXe2J
l4xOw9byjcTDB6lAsmtKqfunDe0u6VcrlKiQW0VIcK88BdHCx+dwKlRoDJPs
PRSpBVs8b87oqlOB11ZEI8L1BLRL8l9q06RCVryZ/c4+FKLbc36fxVGhaFpO
gnMdB8b+Jy4OoFSY8Olr5NI+DpsVhybsT1LhUUV4/K0sTfjxy9dp6hQVOjbl
a9Xt1ICoxwJjbqepcKffLMrtjRpsmtEZ9jagQnVayK3z/KrwI37cZtGICkdO
zCoKD6pAlPa9wQemWB78PzVEqg6DIV3EitOcCkTPJ0mnC5SBP/N932NLKrw8
Etp98rwStJgaWG61osKWjz0DNncOQsT6n+7nNlTYrxMlz1N+APjsd/585UgF
sZBs5uWHctDCX26yz5kKeyzuCa7x7oeIatP2Ahcq0EnhlYT8faB/BW+ofJkK
ZWahqaMOMsC7I7S17AoVfNPpTbH790LT9z36xz2ooCfW6zG0QRrCfT821V2n
wtctY+Wp5D3A001paPWmwqncg8pDNAloCozUNrtFhWjLWndF+V0Qriz7re8O
FfL8C2077orDmbG6k3b3sPH+FsmSnt4B3NG2dRP+VCiEo41pV0ThO24evfyQ
CnXZLpUdHNshFP/0EyGICn+16q/al2wDLr3v1QthWB7z6xqhRkLwfcFJ0z8C
m/9LcjNtRwUh9PVyxYYnVKjKPgtNhwTgtGWCWngMNv9PzDUI17fARs7DZZtj
sXrwOyzTkbYJ6j+0Hol7ToXjG5I335rlg5ALlz7sSKSCrKdckYYRL3DWprzb
m4qNf6yAh+jABb9w2mfGXmL10mP21pTICe+qCePJGVQoOXmzMzqOA0I04v3O
ZVPhoWaGg4TpBrApR4SEcrH+aaeURUqxg7LqdEFbPlYPjabLD7nYgOtD9KnH
hVR4n6it6Lu8ihYXjfmwfaCCw06lU29xS2jogfDNNaVYPrwJlkqR/1C7fOXX
tyuw9dt6N7GAOY+q7B9Ej1RTIW2sqdPsLhPlyQnsJ9VQ4copjTQfUQY6Kq1w
s6CWCrcEsgIetNLQkvQunktfqfBEXFqE+ZyKOqTuPTbSSIXs0vys6w0kVFX8
R1dSC/Z749hDnM0ElDfJ56pFGxWcqzl/XyHOoaMiEpwCnVTQmSRlBCr/RUvj
GlJbu6jw8W6/lunTGTRC8PrRsF4qtCTO2C7zTaNOMdvbtQaoMHQA3dP48jfK
H3l5vWoEq9+PhC4H/kl0nEcgyXecCon22tuPT4yj5aGVyoenqCAz71hY8HwM
jeK80Ez4Q4V9NueMxiJGUOcgXue8WSpQHqSd+JI5hGqwfVi6iKdCZNhbcZlf
g+jmBzZxkiQq5Nhut14/NIBW+r2pT6BTYZfO7oZM+V40esHc/uw8FT7JF9kt
tnajF31XmJsXqYCffg4TIV2oBj07unmZCnzfD8T8OfsT3eJptP/RGhWiHJz8
81U70d8kZu0Jdhpk5ek8aDNrR6s9XlqtcNBAgExQHrD7gbq6kR9789KgXRMq
+342ocemE6WVNtHgdHRGcp16IyrgcuLj3BYajOHXFKUrG9DpiVnz14I0OMHN
vee0WT1a4/iMcGEbDXY+arWPY/+Gxo5oPpIQpcG7xWvqkY1f0Mu2kxKDYjT4
qDT9vjGjDhU6f8TEVJIGT74kqf3c+Qmd7Rma4ZemQc4Xq9sjxz6in86GPGyU
oUGHB2LCuFOFxnYqigXvp4EXWXZ4W08F6mbcW4wq0OAtr8A5R/1yFP3hr7+k
SINiV2mC0K9SVFhfdqpMiQbyEqINkYEl6Ged29sOHqXBUe6Xid8Ei9Hn3ySL
ZtVp8CPhL+0W+R165WSTTvYxGpimqoW3jxWhaO3NUUeEBn0vbK+q0t6g2xCx
2ztP0KDOTgrvK1OAzlV/2dqvhY332Y3cEJ88tE7DPS9WhwYqTic1fcZfo1dV
Pw7yGtBga6jAzgnObLSus7ew0ogGh5q3H2HUZqIi1ygBl01pUDlpKJoRk4G6
8/KbbzenwQGT4SsvvNLR2px9sg2WNOjMnF7X7XiJbtM6sehtheXleUFYfSgV
vTJq80Palgaj9+te/eJKQYVFn3o9dKLBm6VYJ8uyRNStpEBH6SIN/H7MqYSp
JqCfTBp2jLrS4KzQ1crdP56jQoQxfJQbDSZcPRgxd+PQy+FLn49fpUH3rPdG
NzQWrZERiZ27huXzsOyJwfZnqOAXJdcXN2lQRrh6lMn2FP246MK/4EsDbhG7
933CUahAQsBozh1sPn1lTu42jEBdVZKLLe7RYGa4NEw/Ixytbi8N4XhAgy/R
YU9CBcPQrVc7zn94SAP0arXozpRHqAv3nMKFYBrEK92p98CFoFVZnGtbQ2nw
4P7S6SV6EHpxWDP7WiQ23+1mKrj0h2jlHYvbu6JpoP60VrxeJgDdLHJDv/Up
DZQaqK91D/ijzsWPJe7G0WApm+d1v9k9tAK7TMol0EDEXRV/NcEP3TT3+Vt/
Eg2CXz3Ulli4jV4IHUwITaGBy9zji3u9bqH8tVuQ3+k02PSnKSLlvTfqZCsv
EJdFg9k3bS5cnl5o2cKpqZOvaXBB18+iVMcT5XvuUE7Jo4G/iOY9u4M3UUdl
v8ev3tBgr1ZCXrzRdbT0R5yd8Vsa8Opl1n+64IHyXnmrtPoea5/w/ve2eHe0
JGOq16acBr3V6TVhZpdRHnQtj7eKBtZP+a9u7ndF7X/tuF/5EWv/0KRYrI8L
+uHWEZPLn7G8Jk6YPJW7iHILG0tv/4L1j7tRK4V6AbV758as/4bV60CroX27
E1psENzk/R1z478RxXuOqG1I5fWfrTSIkBW3yE6zRd/v6T75sJ0GTuUBRu4j
1ujGT8RtSj9pcPLBkm2KphVqY80zO9JNA7X2LeD+/hz6jin9MaqPBlK1nxmy
JyxRzlgk+vggDXTcJkdxM+ao9SGrC3NDNCiRSOI6nH0W5bj8hPvMBA24TCs6
UBtT1Ioj79f8FA3Eg22M8jOM0aJXX4typrH1aIRvuP/eEN2AG3lo8ZcG+NH+
xt5RffT8wII5B4EGn3zZSksV9NBCH6H9H0g0mK8ysj0Wq4uyCx5ccqLSQDLm
CCVH+DT6Rs85/fM8DciaRJlK+1OoqqIUCos0qOdd0J5W10I/bxkfql2mAV9u
v/KDvSdRXepLvxNrWH3v9qm4LXkC7ey2F/3CRofF04xXpZYoal2+q+wkBx12
dORY3XmMQyeThs5+3UjH3jcsSoIGjqEMe+vob3x0oJObQjd9VUf9T+xQ1N6M
mdF7O8laDeXa299cv5UOVnpn5AO5jqJPNyZc1hGiw/tUckBQ4xFUbNZi4/dt
dEDKZuKvpqigmS3CWadF6SDXdyBRIvAwqljUdaJRjA4ZqTfeRdxWRlEv0/tN
u+kQXe5ZaLvvINposVVcT4oOz6txc3JXD6Cm6u0VzXux/qelSR1olUcHxZ5Y
6svSoaZsorznlBzqvGJAb5Gjw1PhHy/fdcui+FG+ZwYH6HC3W3DR1m8f6vOl
+dCPg3Rwi+Oqiz4ig4aF6rq3qdBh5Hyje824FCpwhYvH+CgdLj7xaHjwcw+a
bNCQ065OB0gRLs/LlkT3Hgo5ZXKMDrOPv8bE1kughQKnJjpwdPBRomhQ2Hah
R+nsAaZAB062eE4hK3H0c2/drp8n6cAlvvbrQtMOtDMZteo6TYdykx0qBSQR
1Np/lXlWjw6ZSk7H/mZsQycda+K6Deiwb47+ZdxNGL2qde+whTEdqJvfxrtq
CaEMmWMdPaZ0CGrtQRwOCqL+3IseluZ0OOYrRP0iJ4ByzVXw9VnSQdK29pDS
5S2o2Lujp/ttsP8rskxemuFDM58xps7b04HNVWbbNxNeVNGnJHDAkQ49sZML
NR3caNk5L0lrZzoU7v+t7neJC0U1D38adKFDsZBT2EuhjWjjToqNzWU6nO13
FZjt4kBN197++3WFDld9nBGZ1xtQ52+KqsPX6WAyl5LLHciG4nPwP+086SDe
krtDe/M64hNecGPEmw7z3NnDsmqryJr7lc0Ot+gQz5tuwry7jIQZyb0ZvUMH
4tp4L/evRURAeeaM4z06nDROJnWY/UOShV5Pj/lj/efhregbn0cK+/dKTwTR
ofa+/zMVYCBHqydrLzyiQzrXsXqOTXTkc2qG/WQYHZQuv33Ii6ciugFOy84R
dDgU+f2Z0hAF6bwg+WIqig6CpVxav8vJiLX2qJpLDB1u+MP9ql4iMimb1vP7
GZaH29CckCABYeLFBaYT6PDJVscrv28WeZ4205j6gg6BI8YMbphBjpiUBpin
0sHTflkp/MsfpIstUJ3vFR3wPdn6/na/Ec8PRuS6DDqQi97MWG6ZQgRcxHNv
Z9NBTOSMa3LvBPJOZMbhUC4dnOt01fDvxxHinYftKYV0qHgXVaaDjCBRCkah
Z9/RQar1jOxV+yHkwLAYyvuBDto92+LNUweRlifTzNpSOhwvTjzA9a8fuQIl
Rbcq6KC6x+9mwfU+hIca4Hqwmg57ErRUQ9d6kNxMQ4nfNXQYu2OYvpzTjfzZ
OB1l9pUOrVZSvLVHfyIhFR+0eRrocAe/YmiysxPZeyVg5XMjHcJF21yY+9qR
r+KGpb4tdCjYoa+grP4DufBjh4diGx3OXPlbLe3WgrA9+LN3qoMOrqK90fXl
TcgrpQ9DL7rooPHv2/1DUo3ISKyBAfcAVj+7E/dbadUj97V3cHz+RQeX0yf7
R5hfkZ3zv6t9RujQ+HXqT8nnL0h1brHXgXFsfQ2XPb6fUodYWz9QmJykwybv
xpZxkVrkH5/BZNIfOgQ371KuFv2EJNaIJpvM0uGI0fdm3WMfkV7JYt5PRGz/
iLGSh8EKxOen/xdvCh2+3b0fOmxWjggH6/sp0OkQRzZifzZVinxQFT08wcTq
o/VxX11UCWI2PTWb+I8O7uO+eXMGHxBK4vt042U6WPgUteVIFiMxev5WG9ew
/VSm5GM613ukrXB7kxcHAzRHOhSZQoWIh8NUgDwXA0qn7pgfO12A8Au8Vx/n
YcB+nohXPIl5SMGX++QEfgZsOqBjfY8jF9Hz1ss12sKAk8c+Df14nIPMymx3
5BRkwNbeiQQLuWwkrG9y+0dhBnDgj6s8GslEGjTvh8qJMeB8p7mzfGg64oI/
g47tZEBMHd59nvgS4UgTmY/fjf2+0WXcgZaKZBpPFhlKMeCdWVukmWgKcpLt
nSuHDANky8TdKm1eIOPF9ySqZRngce1Q4avqRCTg4pnem/IMqDLneHHkaALy
6fuE9ughBnglani99o5D7O68XXl+mAEwqIB4qMYiy/L3Sg1UMdtdo+XxPkOS
h3Q9Nqgz4ODzEU+x3zGI5pNtMlWaDBiFxAfVA0+QAXRi6AaOAcne1NJZUiRy
m1IUJwsMsOCUv+UvE4GUmetyPNdmQKJjphXpTygSblD5aJcuAxSe+iY6hj5C
7E7J8+ToMQDnq2U5fTwEUTqeHHHQkAFTR1tH0I3ByIYj/JvLjRlw7HHRtMZE
INKrcD8GNWPAxk0WruXtD5E8aaJgozkDsuxiiBYvAhBjoY7tA1YMeNnwbkyG
cA+R4jvxwsmWAcEq9757wV2EwV688689Axih63dvFd5BmhalXno6MYCdoKaV
c/g2kkKN3bPkzID+1Zubo9p8ket/ObKCXBnATR7Z0v7AB9Ga8NnH78aA6dE/
F/dqeyOznecUdl1jAH78c6YelyfysamxMPsG1n9ncZ9ZtptIdJ2G0kEvBmzG
SwW7bb+OXKjMLy7zYUCZQ9/nO2c8ENX34qrobQY01y1IIQnuCHdeZPl3PwaY
xPOf27Tmhvx6taJhch/L83R/6LkHl5HAmFHEKZABdJW4DXFfXRCLMJO62WAG
MCfix/qDLyJyAXVanqEMKOkURI9ZOSPLtw43LIZj62ssMes5egFpv56pGxTJ
AALukVL3USck45JwC180A0IXY8X++DkgPg4hhnFPGXCX8nVmNccOETe+ZJYd
jz0P+ch8Z2qNEHX6uxWTGEA9Y+m88cd5pA45c64smQG7P4fwFjicQ+KOVg0g
aVie8lP8GtyWyKWDCrbfXzFgwtifzbHeHNHclzJinMmARznGbyafn0U2SWxy
6s9mgHZ+QOOL22ZIySaSy2w+A8ql23IKRo2RUE7HmZuFDOw8mjOo5DRCbFY6
riy+ZYDn5h5/FV0D5CDjBCGwmAGkQME+l2w9hI1QfJ2vFFu//Ko7y8TPIN1T
0tTYcqw/BRveZuSdRl4PxXnvrGLA0N0vW+sMdRDDVt87ip8Z8MLQq8C8SwuR
/Da9VFrHAFsuiq9t8UmEVn3eH/nGAPuqrz0VGSeQ7x+a1hsaGKAaF3n5kzYg
Lwo0g4ybGIBubfv7xgVBPDILOPtbsPXga8BwyTiOnEjeGebYxoBt6vEPDi1q
ItOPVyNvdjFAbPPL6Sd0NaQq8PqWxR4GzHSXrByMO4pE+Y09DexnwIVHbBIU
XVXE0dNUmO8XA4z73nXFCBxBVK58iY8dZsCnEcvdw/jDyMYLKjt2jjHgzjYl
g/IBZWTAKis5a4IBc9IJhVKFSkjAmUevSqcZMHxTLP/LygGky8HNTvkvAzLU
6/p1zisgMr4GYoV4Bhj6Wd+Pb5FDbkce6ttPYsDk9EWl45b7kZYMwbgsCgNS
L3572M/ch+yqZJhI0hnwvZlaKPlGBrnR3r8phYn9X1qO67D3XmTbclpo7BID
Zq2L65SPSyGXBANPbVllwNs9YTuK1fcgVftd2CLWGRB+cm1sLnQ3sgnV/bRx
AxPuSHZ/Vfq4C3GwULgbyMmE70KJ4g/5diLv3Terr3Ixgb3LNU3bWwzhCKTQ
7/AyobiTb2GVLorkFZVfu7mFCWdvlOl/URdBlr69UCAIMEFc4JC0xj9hxOjX
/ZnLwkzo+0PZfa9VCEmnOGZPiTDB1Iz7wI33ggiN69QFxx1M8OD90M/7WgDR
lpDdPSTOhLs/jzekn9uKJB7hHTonwYRbeiVxRQ82IzinDgtjaSYorAgG3NjD
h0Tf+iDYIsOE1x9dlv4l8CATUfHtOvuZ8Pm1MjlXhhtRzboT+UWeCQX45SbJ
po1IaJXtGUSRCSEeAz47HnIiAx3oxqpDTJh4Fatob8CBHJiW+qp6mAlXFPgt
WuU2IJ1Cs8cV1ZjQ0Ty9RBRhQ6TlW//lajAhfeFfpL3uGs4X3pbtPc4E/5DC
YMeAFVyT5TOvVwgTFCsGM1W7lnDiHj5KO08wsfeJEPIZdBHnEXSekKDFhKyP
/kf2fF3A1SYdyxfSYYKoSFCChd08zqWBbS+fPtZ+H8kup52OKx+aGntkyISN
Zypu2GTTcLy076nsJkzQp4t+Somk4ux4Cqz9zZggdGmF7UIwBfd295Pti+ZY
fnpqXBdFyDhzA/OnFCsm6L1tti4Jx+P+3Rbjm7VnQoVmxlzjxVlcWvZY8Jgz
EyKe2KCNyX9wWj9zVvsuM6F0QF9LZe8Ubmb16u12DyYM5v+oqaGP46IUVKgN
nth6yCI8suAZxR0+/8/90y0mUB5Y2jsk/8L1BX/+XXqPCSP+208UPO3H3X8f
4lD4kAnb91jpNIz14KRG9AeyHjFhjvboaKR/F46WqxjKHcmEcY0ThYyjnbiv
XltUrz5lglHEhEGmxw+cgtU6n0QcE+RfdnKbp7Xg4hDKRHs8Ew7+qEkMxjfh
XHi6YlRSmFCdFuG/PtCA43oZj1/MwdqLfSc611KHyztirfvlPRNG3exlHnZW
4QTE9Hd7lzBBNzlI9+OBSpzf2jGmTDkTlpVG++syynH6zbuywj8y4cX6a3Of
/hIc3mF8zeQ7tn6SBnydH77FWWj/7GVvZgJX9OtW9ZhCXI3818KSViYYO3b9
LP1UgItiZNmI/mTC12PH/pZ75uIORVwuHx1iQkr6PWuBjZm4hBtWT56OMiEx
sTLRaiwdt26h56I1wYTnuomVeUmvcJ2SB7AbOxMYxkWy10pScJ5lpGvXqEyQ
8axOzNaPx5WO++5b4ZqHosDfHoZyj3HH1EOei6nMQxVfXPDrGE9cn7OYWprq
PNCYU93rwTdx3tFv+/eoz4NsTezEU4EbuMI/A+JyuHlAGl339vpdxe1+fjBD
7fQ8lLZ114c8cMVtoPYVmdvMA17Nt3/K2AbXWiDf+CRoHqyueofXlJ7C2e3u
WGTvnoeZSypTk7u245gtTyZvBi6AY82kYRBH6fEkTgefszL/wChfcZ6H0+q4
8GhZ5ob6f6DOfpIQun/92Eb/QAtNz0XImYqRTNiUdowt3+HdpNASzKhknytk
nDzmlfzuidDXJeh1HDhJmB3T/HQgnEfw+jKkbnymuzv3gaagvpdi0JYVCLj+
nbTx0V7N4YOd3X41K7BV+pOG6+gXjfcvQea3wyrsDrcnTr9z1bB/pyYosbYK
fy2KmmJ9Nmk8fJQROFywBuPKyUkcfQXqRbMSKVsM16H0no4Hb6OpenjaI6dR
43XYNFFaftTCRN3lLHHfW7N1MNkaFyt7wkh9V03Ne6Pz61DhoFn+PEBPPSLG
9nuU8zos5Z+fM3A6pe6m9oLK57cO25inkRdOaurSIdvOcL9eB/r51ojsAQn1
NY37m/vz1sG7tTT+28hO9UHiVNfrN+twPzSdGsQprv70fIn96eJ18L2LHNn1
drv6usJZ70c16yA3H3ZhM05QffhnzEuO7nVIndr57cYMh3pl6MLF7t516DYd
4XCL36D+/LijfNbAOnQdM+dps2ZXN8g5VKo1ug6711IfcZ1YU6u+09Yc+Hcd
ysZFXr9ZmVdLOHg0xoywDo+I8dZnbjHVPCdTLaTI6+DvqMjeystQkzP0GKtj
rMMnxyCeuttUNU72nuynC+vAc7PGaocJRW287Li709I6WPenByA+JLUa9ywl
5dV1IBYOcvPdIKglSvIz19fXIc6p45Bs1Jza/wPTALHQ
            "]]}, Annotation[#, "Charting`Private`Tag#1"]& ], 
         TagBox[{
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwV13c0l+8bB3CrCClSdqRBQipUpLeEiIgUFUohFBlZFUrI16xIyJ5ZkR2Z
WWWTkb03n+zN7/n983zO69z3Ofd5rvO539f1HHrwVN2AgoyMjI94/P/3qsFY
Y/G4wcWQwVPVEdskUF1mN+9lk4VxmJTY/30mPDAkg00DBYI6YeGElWrb0kPZ
9DE122gaRlhTf7ngA9szGPQakYcQ7j759rI3mwvCgtdWAwhH7Fd182Dzx4cj
EUe9CL+o/VR2K88fHDf4nnoSvuXaR3H47kekcPvmeBCmX7Rwyg8JwIzDqux/
hO3++NtNcQeh8yC1uhthNb8OE5VjYXi07/GZV4Rf02Tw/ccWgyTKwR1WhAWu
vHdPN4/BIVeO/ZaEm1yfjndWxiCuMZfXgvARSsEkYZtYWNUdOP+UcMVmjPCf
pjik6jGpP/7/+fMBYtxeCaixdj/9kHBg9/PLWVtf8YXGNFCN8CXO2zE9N1Px
4ZSv2XXCE3fO7qBJSQVnUqaMKuGDU/YPU4TSsL68PqRM+Kmx+FGyrjQweXAw
KhBm0k/9EnsuHbQ+b6kuEta6HZn6bzYTfFz7L/ITJnVq0EaxZ+GWFsvIMcJu
ujQGNy5nwefUoudRwhkPn7Jn+2fh+V7xRl7CDGZSri/OZqPA5/ElLsLlzn/v
7HTIwaGvnlmMhE8nM+7kpMnD1fqIppUtEn4Jl9+vFcmDPC3dyWXC97/Z5Tve
zsNno3b3RcLe2b3m/Yl5aOrzFJ0jPFac0hl3LR9aLr2PJwmHtSh+O+X3A+WP
LG51E6bbfq195WARNgM91gsJBxpr6grKF0H9WvOOAsJH/gjeZzQrQts23e58
whcT2h52FhRhXlSCKYfw94SArBzhYpgzUix/JTx9Y+qHUl0xHm2NHg0jfPPL
p2qr3aVQEPi6YE84RMdZ2fBQKSp02P1sCQ8wmdZqiZVinqlOyJrwUweZeimd
UkjmLWiaE/5PfbqJOqUUM1TBjoaECzZkOj4r/wSn3NYedcJH1WbGfnqWob1j
+8AxwuxOVyQeRZZhH/2jeV7Ce1MiPGlzyjAw/uI3N+E1mhvCagNlYPDwMGIj
3FCcY9VzrhzcrJIP6Qk/F3m9tTJcjriKjKuzmyTU7WFmFpauhFLWekg24Z9S
pgaNNysRq2n8I51w7uOK7GePK8FqK9vylXB0pd3t/IBKFL87MB9H2M6pO0xh
uhLpJdPdAYR5SXHHHwZXwfignKE1Ydu68whc+AVLBe0pQcIMwlnDv2h+41+B
3TN+wjHeIl7rnL/RJ+GyeJhwozLfX12533D0kRxgJ3yimtnqaMBvfPGb0ach
3FtJiks/W42LtjI7BjZIuFISy1D7vAaD8onavoR7eA5lbfnUwDYpfPI/ws9e
hdwVia7BIeM1CxfCkfD74lddA8oXCfr2hNcLXsnc4azF3r1P+h4QTs27azNa
UIvU/04cFSXMksnYQ05ej1hB/pf16yRoe61rDB2oh/lPXKsiHKU/XF0hWI8P
tDRMJYQF93//7qlVjyGJWzbphGVs7n/cn1aPNqEP8f6ExUM04/xPNiBJTDPo
FmE93TidLz0NyCKLZm1YI8HlKkdQ0HgDzJe5RSsJx4m/++Ox0IDFhPvShYSn
GJ4rmdI2Iqi+TCCZsE3RtfOnxRuJup6RfUvYi2eR+Yd3I55ET1hIEM4euFxT
f6EJ9KS9s36rJLQqvJ71vtKEofsevP8RXvpaeEBZvQnLgu2XHAmffXFer+pR
E1xCbRSNCOfuO7lU/KEJrnza9pKEv8uy86SPNaFsg1q6Z4WEH3H/rPz9mxGP
CCdmwl30wkHq4c0IEnMUpCa8Yfm4cG9iM4xqlkpXl0mQwgiNd1EzIjUPJfcQ
LmzrDHWdaMa3pyKP4wkX0VRW2kj/AaU29XNRwqUmoRy3p/7A+b5WvuQSkS/j
jx/rLv2B+y8FY0HCMUYS+Q/JWnBV9tw2J2FXw7Y7Zswt+HHYcWBzkQSFB4zB
by60oCX6pXMh4frbrqxfvVrwi+38TknCXQqm+ymFWrE+83Gbe4GE2kpJA5qz
raDrZr+/m3ChPG3W7kutcBS2iV6bJyFcNl6D9WYrxPxXG/8QfiDd7yfk0IoX
tHy/3hIeO3uTSau2FXHt1UujcyQsHpPak2Laht2ziou+s0S+DMhUeti14Xyu
jpEtYbdQBSejN20oMS//pkv4ALMG6XBQG+w0bCoECYuTP64PLmvDnpOepIp/
xH3rDPR152hH/yttsnkSUV/fhT36v9px+9Qbcv4ZEmSV1iov/WmHqNbhlF2E
vXaSveLubUeM2o2jk9MkcDnQ/etYaEds+c7nKYQvmvA2qPH8xa0llqSThJ1k
r7+D7V+4/e7sOj5FAsVq0l6Oox34vlU/MjdOAketzDxOdsCkqp5UT1g08m+L
/vkO/H7qWpJM2ECR+vPXax3I3JldYEC4KujBURmbDnjruu9pGSPBV4JNwriy
AxOn6X5/GSWB86XbwxzjTlxSbNvBO0yC2HUu+S6rThSpmFouD5GgciSTn9yx
EzrFZZ9rCDvV9E9f/dAJlWuMh20ID3BK2fXkEevjZivlgyQkFMx77aDvgv1+
N12tAaJ+2/ezb3ztguX3niXZXhKUrxU7y+V2Ef8Dfn4mwg8/c6ueLe2C4o9h
2t4eEt6d7Rllb+2Cs/rfAVvC40/vsg1sdsE2/Gp9bDeR7303X5pf68amrYDQ
XCcJ5KVXZbynutHJseOJYjsJrHsTGZyWusGizvGHjrCw7q5Oc7IexFbwdte2
kXBnrdJKg7kHP0OL6q8TzjwtF8txoQdmQax86q0kGEaDJtGzBwKaiewyf0io
cRGtqxDoxRD3kV9N9SRI7KmmeC/WiwPkqHxN+EuQ3tm70r0wq16QEiH85qtP
BOlmL7zefnvvWUfsbx+zZH3di3z96O+StcT+E6EsJm29kPdVln79m8incee0
nTJ9oOXWeh1cRoK9cN3vx1f6MGsvUy5OOM2KbbhBuQ+3pOYeNP0k5oetVLbP
mn3oL9eOpya8ytTtfNK0D919bOImJcT+C2dvagX2oTdZz4qhkATud5OrCTN9
IJNkvV6dTdwnPaeE9Pk+nBAWatUirHtm3+38lT7kUPUnDmcR9W2VyK2h6Me3
mSnJzUyinlweNqQD/di9L7PncAYxnyTyz4uiHx2bVadVUknYUWYwVeTbjwSW
PQf3xBN58HH1c5V/P3pnzVVc4oj78MhbqTGoH1GiAV9WYklwps1KHIjux/A3
zpaeGBK2rlMZ78jtB6ladTIiioSV7qjhq339cG2dGV0LJWFyubenRWQA67YL
wRt+RJ4+8i29Kj6A4yxxMvKEX7VdjCuSHIDrma95Ph+I+5sTapogP4AjcXuZ
Od//P//vbrzUHoCZSqQYvw8JwQutbEfcB+BkKGVD5U7k02ythmXvAO7FsOsW
Pidhn57DudGhAbCIWXD12BP9rEGQU3tiAP+Uc4w37Ih+luY5KLc4gG6mmnBR
WyKPnipastENgqzOVNrPisjz6TLfYvFBGE42SVA/Ieoxkf+bwWcQf28xfci9
S4LZJ9XDJn6D+NzSKZl4h8h72cEX5YGDMHUlOx18m4TfobRCL6MHccX078oz
TRJmr9/2Hc8dRP0P07j9N4i8yFm6UTY4CPnJfbzkV0n4++ZUt/35ITyWk+p8
Ik70Q5FysZaLQ3CXMkjnFSPhSbeWj4jsEBw/Bz1vPUMC2dlXGFUZQkJ9ZuPZ
UyQcm6iL1NAfAj1bkkz/CeL9rj8xPOk7BFuaz3o1PMS8wBVPGhoaAt9mrOwU
DQnSt950D44PoTxkisWamgRL33vVAzNDmFe2+Lm+g+hv5KzxfStD4FjV+URB
ScyDI+66XfTDSN5ztHdxYwbCaSa1zaLD8OXglzf/N4Nrl4WTSl2GUSqgZx/W
MgPHl7RBJf8N45MElWZX8wzSskbcin2GcXPCJ56laQbM/OEPCgOHccbpp59b
3QzR7/ay5yUP41Ru3jm5yhk8aZ11//ZnGPtVgxNkcmfgZZxlGHFkBCOefHuO
Bs5gQjrFnU5gBPPt1PldH2dwhTU20ebkCKS3JXre+c2AotJ/RlliBKICszYz
PjOwP/LMZlV1BIGU44aOrjMw7D3tpv5iBKcn2TqnLGZw6WZaLFXTCB5f7xvo
vTKDMMEvlU/bRpBKxR7AKTeDDcqI8Y6uEeh1UbLflJlBbrqv0LfREfRnNzl8
v0DUY+/TLJ3NEbQxV7KpnpoBZ7VQeTb/KGgCnHO+sM1gSTppyMhpFG8e9yhM
j0zjR8zkZ1uXUaiXxKw1Dk7DmUbwhtt/o/hLq2KY3jcNhobkkmi/USTuiNI0
7JjGsXtfw3riR0E+zMsaXDuNWw7ftDQaRmEQ4p4tmDGNrO85xHA2hjz6PPbO
59N4zrXyRuXYGDh1bTWEbKch/fqcpM6JMYgeVIh7bjWNGoXvCc/FxjBgaOCw
88k0htry3LIUx5BjvctoQHsazEsF0icsx3DuZlxYnNQ0np0uyzzwcwyl8Uk9
kutTMBTliXhfNYZ7Z/R3eyxNQUv8pSd93RiEFvdlNs5OQVJC9AHF3zFoMQWq
XBubAoVMzJ6ZmTFIjLFuLvyZgq+ai0k5+zhub9E/JkuZQqK5LM8zy3EIBFQo
/NWcQohlBB3JdhyUdyvDFNWn4P1sY8nYYRyi+Q+D05WnYG6XWXvPfRxdixTG
ZpemcPbVkRdKYePY10+W4SUwhTJfqlbe3+OInjJ31V2fRO/XMs/GQxPI4Rv9
K/hpEg3TVFOn+SbQLpDnUvZuEsWCcsr+ghM4Ri+up+ExiYjEcnrNsxP46ZsQ
rO0wiQdxFd5dyhNgbTnlzPBwEiOhVb6jthM4QZ7eOS84iWmvGr/N2glMRW+3
x+RNoKeafkG3eQKupR4h5zMmUEd7TaO4fQJumu2UFUkT+Opey/xmcAKfPnql
lodMwNyl7iPN6gTu/fzAcd9xAgsvGj7tOzKJgN03HbcwgXWTP5+PP5+EkNCN
v3U/xqEhrvNe2Ik4t3P6zVDmOJLJR9zOuEyih/p71FzyOHQDly2kfCbBOkxx
fiVkHCXl7ApqUZPYeXDnty8vx/GWR2/B7vckjo2VK4dJEHVrnVauYp8CfcJK
d2faGE5cot4yzJ9CG5ndpx63UaQlJvG1F0/hSRHOy7wchSjzdTXFiinkBdob
hlqM4sJoYMyJxikMnSy1k9AehYq3gNK/kSkUC2iy7z01Csu/1wLtmaZx3ko7
WfjvCL5b+J/2Mp4G9dBctcnhEVyJOvToG8sMgnny/+uKJHKL6x5vvzbRx3M7
P1oH9ENw6iZd27V/eL8kfJC03IV9e/7RlK39w8+kitFWp1Y0FXi8Vdz8h0+9
3Dd7jFrx4cnRnfXb/yBdrBT0T60VTL/vUHZQzeICQ+uK2BHCruWbJIZZJOa5
XZP/1YK968FzHIdn0R2XY+uzvwX0o3JdVkqzOLbkLnghpxlURZ9TD4fMooki
qEmftxEdF2QVesNmofnTiW+bvpH43pnqC46cRU2cknvicgPuZEsxMcXP4uG5
P59EaxvwLaX3GVn6LOj2jFKz2DdAN+SwRHflLESvO1yQ+FKPXPuksoD5WShq
3WEtEa6Fz/INHfWlWSgk0rJo0dTiofXG4u7VWSi92t/NNFADBotrfK5bs9Cm
kW6Z/1gDAyPSf1a75kATwr/8cLsaTJpnVK9zz8FX91fodvtvPBbN/7tLaQ7L
5xidD8dXobihJTn32hxUYz4q/3Gtwn7Tf06Prs+BrpzdPl6/CkWxR4+V35xD
RnthVyZvFfaxvLN8dX8O1H5lGyYRlchf1adbtp5D2lLkHqmoCtAVMUgNRczh
+PqfP4JFZbh/9/hev+g57HK9vXwgqgxZy5cHL8XNYYxMbh+vaxnuidj/F540
h/QCutVgpTJkRA623MmeQ0KdwI/9HT9x1yXXrLF6DnuK/5nxbJYiSfFBROHS
HJKpTo3S3i2BqOChi1idw6QPj0fk5RIUMvR1Fq3PoT5ooENdsAQNzTosJWTz
eN2049KOrWIs6Nz2+Uk7j8ST2ufio4px0fL6y6qD8wiVkfKP6C9CQ/BFrSb5
eeQcfFH9RLoAtx02F9UV57FoUOWxzVKAgXs//JqV5pFP30CMaz+wcESi/s/1
eWjExId1hv8AW6qYfNudebiIecyrUPzAg5+Col1m81BtDP3I0ZCHxUn2vSMB
81Db5Xdc1CcX/qGjlSFB81C8figpzigXZ1QznW6EzOOBrO5H5cu5sEi/RiqO
nCfmjYnmU6s5mLZ7Vfc5eR65ZmkK2o9yMLxjxEutdB7TZ+fdKa9lo4X7266C
6Xl8YNkYPnkhE88aHUqs/s2DL6+hI5EzE/veXLUXmJ+H1OBEofpmBtRGBsc+
rcyjXsbbnb8oA7XJB6osKRdwPKnaZ0Q2A+XnX7rxsy1AVHKc8ZVWOrJuXKH0
l13ATPTNmd9haXBXynXlvLKAT7rBGdJuadC+fJwmVnEBclyU59pN00Bxhm53
tsoCeCxoBh5LpUGFqf5Au9YCNO2ZF2V+pGKs4ZYAp+kCougt9ysofQW7iqFa
zMcFnM0pC9/4lIRpubZmwcAFNES8VS4zS0KxlMKtrOAFpG/v218hlwRDIYG7
FeELiHz7tNNmIREZ9DP6YwkLYLiyx9ZVIxHK1dZ2goULmObVsGXjToCTgmt4
5sgCOv4K80p1xaFJ10hbZHwBFG2Rek/z4nDEWokteXIB/2KVVBoD4/A7ktEv
+t8CVNnKpQ7figPzeqjbh7UFjC+cHl1pisWXlGxTc4ZFXHD+kny2JQYNTGOS
guKLGD2RMmi+FgXe49Ur8ecWUW3Ov8nXEwVrfM06LLkIgZKsaOrSKLA/eXaS
Q3oRUooVpfCIgn452WHaq4u4ryL5ypszCiu2bLRjOosQq7n62EIhEoe6r7ZH
uy5iSmOje942HB6lkqk33Rfxd+lscoFsOObiBd2oPRfB5ksu3s4YjlJLBtHH
7xZRpR0SuZkcBn2aJt/TnxdBxRC7tTESii9nbl8pSVvEJ8x3GhmHQNjjUXZP
5yIGtDrGJ2KCEPBUy/tdzyLaLhdM/XsehG0NRX2Z/kU41NuOnlcLQgP3Caa4
kUU0pt8T8dsKhEXWjKnp7CKO3k3l0dIORGaf9dGNnUvo411Obzn8CRJnXfzZ
Ti/Bta52kK7PH60P2MRDRZegbxNeS17sDyufr208Z5fQGybZzxfhj+Thdnb+
C0swvbBgTqnnj4P+QpHi8kuYblrK+DfkB4rZ1pQbd5Yw6nJkxWjxA6oTj1d6
Oy8h46dYId3Z9zBqLTRidF2Cz7t0qbec70FFoUH78e0Spj7rDAtQvMfF247X
QryI9Ye/Ssdr3yGNurk5MWAJ6ldodPHoHfz1X/ZVJi7hnfKJZBEZX2gfrF8l
b16CWUh80o77XmBgs8zKb1mC1KrQZ2cRL5Ts229h3b6ESleLrWvkXji26+7Y
WPcSkj84Ha+L9gRpfqS1fmwJmsN8Lw2nPOD8aysjdGsJDq8vVXl5/ocvz4TN
zgssw7PmlLPzlhvuPG08Pi+4DKelkuHRNjfsNnk2nHxyGYLv+3W9v7nB8l6e
No/YMnJ0I+cCDNwgeVVeiVp6GQd31RkFNbiijluXv+XmMnhPk7VTprtg8bf3
gPnrZcT8YeVpCHdGF12L0cYbYp11mdPL2Rmlypykt27L0PrZmWRt4Ix3dYnr
YZ7L0L7pbNxwwhkCTZXMtR+XYbOfsTck7zV0/5JfOZ64DH0W/qZbfa9QMWqd
1N+0jNbxRV2Wj45I5i84ZdqyjLH0PT0L+o7wM6bKXWlbhuOhMV8uMUfcn/xQ
tqd7GdLyCQUqrQ5Ym0ntlhpdxvJy6c/DnA44uTS+J3h9GeSh8tniWS8QSKX7
TP3ICnKpVJ33sdtj6yGLWOOxFVRGysUpzttB/2fDourxFVBoN2nn19hBxPmy
7TXhFWhG5bFef2WHqm3+5wrnVnDK4ySt2IQtltfmnS4qr6BK64lVRJUNbs3+
5ynwbIWYn05IZ6Y8w4/rl5UTbFZgnSJ2O8f7GXjTNuj57VdwqEHu66TpM8yY
PfU56rgCz/i2vhHhZ3Cd0njP476CsIJSFe4MK2SOcn86ELKCKx9cp7TKLLGv
JyuKomwFcTxv63fRWMCH3sEhp2IFTh/fqlpMmoNWUlbrya8V3LDfCqepNwdF
YNPu1roVDDYkWpcHmGNOjWSX8HcFYqUBj57ym6OhnF/1OmkFekNJePPFDF4p
n9dD2VfxXqviUNmnx6DpetCqzrWKM5/F8w2NH8OFVuAbNc8qAgs81m5JPsaL
R7mGFkdXke6789HBPhOYHGpplBVZhWSOLa2kkAkUPjJ8mZRbBdUFrryLLUbY
4fBa47zFKjT3Glucvm2IzNmp1SKrVQjej7Q8KG4IfUOtcHmbVRx0K9e+tM8Q
ZaonJ268WEXZWb0AgToDuPB2O5m5rqK/z9rgtbwBqKrOJUUHrWLr1LLyirQ+
KPb9I2coXQXdpUHrwTsPkP72brx/2Soo5j477b34AA82KpQ5KlexefFKhsmh
BygdDv3EX7OK3Kp9TrFjenDOVRK63LqKaE83BiF7PZDrxmvZTRDnx9oFKUTd
B1mCbuoA0xo6xxI8Wo7qomKqzSx8/xpc52K6Xed04CWiJqzNuoaLGYXa3kU6
YMm9nNLCtYaranQfwu/oQLiSP6mKfw2MXCxzxf7a0B6ei/t6cQ2zvMJGL1jv
4vuht2HPTdawxD75neuOFhwNyHTPmq5BIMU/IF5EC7IJ9lwLT9fgzXj2ny21
FhpEnoSYWq9BshlSE1maGINa8P1Xa9AZ3K9Lc0ATB3Q5AuQD1qDLpSFZMXAT
lsGp3kyla+hi8CNTSrqBnI3gt6Vla3CZV7r+yOMGNnTdXltWrmH3wAmfPOMb
eHtYx7qpZg1Ccb2GVMdvICSZVudD2xpsTnt+5UhUR3mhgSDT9BqmxW770mWr
gXWQo5qRdR2B0amzV4dVoSNHXV7Cvg5F5fSHc6mqiIqfK7TgWkeW7quVueeq
EHzyK72Rdx0DPh3nNhlVcWnRJvi90DpiLmczHJNVgQl1kzHj5XXQqIstKuUq
o+CEOw2j2TrCXeKkTnYpQvwPS+0H83XQ3jr5uClDEWkv498zW61DQDjRM9NT
EVG1FeysduvgplvhEr2gCPenO4S4nddh2Ba4sD9CAeoZzmpCAeu4HNudxWh1
BaMSDsGKhes4Prj3nMVlOdwfpL9XXbwOZ93oPvDKocMz5PC1n+sw8ZJWkyGX
Q01XfvL1qnVsPXmo0F8ki3THtULNpnWMjdN0OEIWL0ttBw1G1pFztcV+4cpl
MF61FHRm2IBXdq9iyYtLiCjZQyfBuAEpW4MwAd1LEDmfMj67bwPNG7rb5dKX
oMI/FqfHtgHDjCX/9zsvwWOn7qFLRzbAY5Iza+kvDaqfigfIJDYQ8lk6UtgS
WJI8ROZosIE79P3d769cgGtGYY+Y0QZUS/vdM1kugPmEdsG0yQZ+mzwR5h+T
xBn2T891zDfAlPdCnsxDEuYr9IsXXmwg2VViQr9RAuOZK+Pr7zYglnW918vs
PLqEGprtf2yAf479+0SPOMInGR0oizZwd+j2hbI8cTxIuHHMu2QDF/Vce1oD
xDF+pM0uomIDK5HGLHGq4lji6OGqbNjA3KOqiIGfYmCknXrEPLwB7YZUSvds
UciPUG983b2JNxGqSxdLT2NXjGLsub2bCBtuG/wUcxo1ep4qpUybsBCxTOF+
exo3uhkiW1g2IWJ9JSVP+TTu/9kvv3FoE/kvSh4e6DiFF6WH3ymKb6LuRcbl
Y5siSAvDkSHdTeiqyu8KKBfG/PN5aj29TdiZFrAPfxSGuGb8ZPfDTUj7BjM6
Ggojf8+ejDajTTxSMhvxpBFGxaueS9WWm3jQcr2Z9roQOh843Et324ScyRk+
sakT2MmXH/zq6ybGuNakbt86DkXKp46baZvgsDRmZj55HF69vA+eZ2xCKu1c
OR3NcTAGehx/lrsJj9iXUml5/ODcdSf3Uekm9veua//k5cfpyZUWldZN7HKJ
qS3dPAadVHFGrq1NtJF3XazoOoLsOysMDWRbeB5aZpXx/QgYdubRv6HcQlbs
pdDOgCMo1paiGafZglrzbZlOtSPgpZXdzty3hcQbDXzevw9jRF9tWvn4Fmb7
tXYZVfDCjP3Jr5caW1A/+uqG0zAPKsqFKk9qbiHKlVyI5RcPuC1IZQO3t7Dp
wV7Zk8yDhkrLYoV7WxBSCtxYf8aD09b2OcwmWxD5klphQM2D5Xq32GSnLYCR
PtHQ+CBeuUa+7krcgo4q3zkjXQ7stqW+qpeyhcXwoj7rMxwINjJlGkndwrh0
1mQFDQcylM5HkzK34Jzg6Xwqkx0jjI1lFEVbaKHNUuZiYIdSGBnN8eYtNKt6
n1iqZcWBnHs+1utbiOj8Ukj54gCiv5TfWtvcQndt1MgPzQMQCT7B7US2DfaC
PKMU0QNQdFhOdd+xjY4AK54zpP14edm38fOebSQKzGxXGu7HQH0hc+nhbdAd
zLhUd48ZKWNcnxmUt7E7P52Dy5YJ7qGu93tUtvHVvle/8hYT9NWnj35V24ZE
hIxyojgTOH/8SLumuY2itA5j1mVGePjerfB6sI17fIpnPJ8zwkg8aJbWfhu/
bu4stvXcC14XZgXquG3QyPF2jsbuxta5l7vbvmxDofDywIbFbvydHmyKS9rG
v7tPmp5c3I13mhk68t+24Z4rOXennR7bAupWrj+2sXbnHN29vfToavQNo2ze
xqqvyNKrd7TIdVt+2NyyjXBDL7kNPVr4S947Ht2+DX/Kol2/ztBCKVY4U6Zn
m/g+PJaj0b4LeXa1v16Pb4NqZ4ri0aO7ECAk5qs2tY13Lc5dnKs0sBgI0ThE
2sa1OD4PvVoa8Cs/6S1e2Ebxm0r2BhsaUJH/iXm3vI2P+i5zK0o06MuSNLm/
tg3V7Hd1Tw7R4IdJ9EmRzW38vu934sQyNT5x0y1ub2+jWZLt7ZlaavwPmLiV
8w==
            "]]}, Annotation[#, "Charting`Private`Tag#2"]& ], 
         TagBox[{
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1: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
kn5tDg==
            "]]}, Annotation[#, "Charting`Private`Tag#3"]& ], 
         TagBox[{
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[2], 
           Opacity[1.], 
           LineBox[CompressedData["
1:eJwVzH08FHYAx3F0jfKiVKZTkhJ5Spmo0Df0qqZURFjEPK1kUZRlns6Qidgm
eahckUJchrZXuLt0Iq/ydIQ6Thwdd3R5uEPxW/vj83r/99HxDXEOUJCTk3P8
2v86BAjb2aMBewdiJa7RpmJQ7DVD+dT98EsWqYdsE+O7/OxblVQXbC/Zd8PH
RIzDr7v/vk31R3VXe7udkRhu/rK6P6nhOBUSZUvRF6PP9Kp9GjUBMm+vycgN
YtDVjyWlUDMh7yF30lJFDJpSpf7v1EIcexCrNDYqgrvHXYbkUxUEJZes2Dki
KBOa58ENLBjnf7PjiIMIW5wmhM+vcTAbzKNPy8YQ0bIb2dMv8S7moW5Szhg0
qtT65eVbEcZqEUZbj+HJoP2rVusOSAwaOFYdo6gPur3OQ9yJ6N/MS9z9RzGj
Z7Oi7OduNDy4rtczK4TCXOnKdVveghd4XpEbI4QF8XlyopyH8AxKa5eiEK8S
zFteGPKR4rzkaNz1D9DOEM0VTwyAHpA19HTpB4hk/P6u7YNQ6zRjXKKNoHCs
pln1+hCa4F5vPT4MVa0HHwUCAfyffY6nug0j9Wx1IF13BPm7hC02jQJI95UK
zsR+wNXQHSl++gKEm3Gqvn0uRPNQhsHc1w+/nHOtXWcMWx1vljeNDOJzUGee
QaQILucqDNdiEEa2iouBNWIs981u7KW/x8F7Oj9VaEzgaFuiT9/UACK0vDe9
9/wI27yoR6lOAzAWuyp3O0pwX8Wn+qQ/H6tXSJQ48xJo97VQ1yr3g8LKY2y+
9Qm5djeHopt5OGde07vs8CTM023Chi+8Q+n3vnSmdBJ79faTu5vfYkakuXIk
awrDUro0WNKD6hMHl2Tun0bmaKqndXE3Yg8l5leNTOMvvkeuTcwb6PQ59BQk
zqDtONeD792FPZYJmVQzKTYyIir9dnTCc0PrnDxXisuNNzbGanMx05w2GEqT
wVVllFjKdSCbcjrcWXcWzJ0TRaELbVjdX31PgTOLpinXjHGlNiyNprnsvjAH
vaKJqvg1LZArPs0YXDWP8kchI/aOr3Axl5G2qn4elnzD9JWXm1FnlKykdv4z
djaamw3UNUHN4aJxvOoXaCop9xpbNoJn0sa9UvsFapUWDUvvN+DxHegKTi8g
d5dR/DlbDrwYFmpaiwsINVVvp8jqEZd4l8YrWUR+axwvuPAZyoRaeapHCOq2
FtjciGQj+XaiT/9RAlrNHr2US2z4O49vKXcioEiqveNC2VhfW/vY0Y2gRD+J
ExrIRkr6qRepvgQuGtxjPzqzccYi59PyKwT5FutAM2RjU8KaQ4pFBO8V5jQv
/8PC4q4ole6HBBH0K+6VZSz0jg91FJUSKJtGGU4VsJDhVul1oIJg42O3lMgM
Foihc1hiLcHQSJbJw7Ms8NrT7yzhEhS2eBbErGfh3ySZH7eLIJtlJRWsYiHT
ytugoIfATaPzjeMyFg7f31Zl109gV/Yr9KVMPP3l9UvaKIE0+NG92VYmskx2
pjuJCRgmXm5hL5i4MHjLRecjwcuIH7IktUxsPRLMZ08T/JETXzFZzARFvrMw
Q0YQaN6eGkFnYqDaKshnnkCTXylZzGKiNqjAdPsCgf6BWl5yGhM3tZVnCCH4
Rj7quHoCE/8Bu2p7ng==
            "]]}, Annotation[#, "Charting`Private`Tag#4"]& ]}, {}}, {
       "WolframDynamicHighlight", <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
      DynamicBox[
       (Charting`HighlightActionBox["DynamicHighlight", {}, 
        Slot["HighlightElements"], 
        Slot["LayoutOptions"], 
        Slot["Meta"], 
        Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJw913c819//P34is2EkURJJSJFk1PPxuJdINqFsEiVpWJVKMkKIIiOjzIyo
ZEtRkZWRLZtCnnuR/X0835/f7/X853m5Xh6X53mec27nfs55SDnfOOu6gY2N
jZODjY31re86+7PuryvK9r8PBdJFTEIjxJ7D/+9AnpL9j8Wy/7OVdcY7CrX0
P/OvB9rp7q79z/vMSLPfIuv/8+12TUhiNP9n0VLBUXb2jv9cPnnqRweu6z9/
dU/baU3o+c9MWWRr0bX+/7xh8Y3Azn2//rPaulO5+dvh//wjRLX9u8LYf5Z8
il/MJ43/Z/zC2Giv8uR/zp772LIleuo/DwYfHvHT/P2ft0jkkn///g3/1lkf
MhidOvTma8gfaPn/HHWl7FK6zDSErv2fT1q+z+HsmoY6+v95/sSb324BM2Ca
/H8uq6r4AVKz8Fl69X/2Uakv3f5tFtKt8P9zwU3tPT5ef+Ghpen/PPa2PvKn
1ByIzckvsZxe0LDpvPocJGy48o9l59ffnwwbzgH3cal5lmUyG7c4O8+ByWYF
OsvTaU0xM7fn4PJ3YzLLjTv1TAuC5kCTME9gOe9Fs8C1J3PQPaI/x/JjUf2f
SklzgDSjMyy7x7c8o2XOQeORhimWbXr4aOZ5c1D66tcEywbCBmfLiubA9HP7
GMu4s5EftpfMwYThqxGWFZ+1Ct2pnAOnCb0hlnd18nsPfpqDgZnWAZY3bTXs
PvZtDsJeSfexTIz6EbfaNgfLilqdLI+2bmI4dM/BzxDONpbb+Yws6gbmoDki
upnlz3pPSqVG50DBY7iB5bfhbduCp+agXnjuC8svGzf7/p6dA/99JZ9YjuEy
7tUhzYHnokoVyzdD2uN5FufA663WO5advm2Zv7KG9e95Yz7LZhtMzrVy4IEb
R8xiWetkTLkiLx5aFIvSWFZ52LE9egsengSwJbIsXbv1NlkYD196xmJYFl4z
6TcVw0Op4alwlhn3OhOFZfCQddPnNsu/qwX++cjjQT9S6TrLvYumVn2H8BD+
TM+F5e8azyrVVfGw/XmFNcvlt3/ueKGJh+I/14xZfl0u6LeE4kF6i5MWy4lM
s0FbbTw8qnl4lOU73l0vdpvgoalLWIxltw9CSwEWeCB0X+Jl2Zp61mbCGg9j
7vn/1jDrK8dVazniIUaseZrlYze6xbNd8JC050M3ywpvhe9tdMeDyxWTWpbF
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
               "]]}, "Charting`Private`Tag#1"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1: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
8w==
               "]]}, "Charting`Private`Tag#2"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1: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
kn5tDg==
               "]]}, "Charting`Private`Tag#3"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[2]], 
              Line[CompressedData["
1:eJwVzH08FHYAx3F0jfKiVKZTkhJ5Spmo0Df0qqZURFjEPK1kUZRlns6Qidgm
eahckUJchrZXuLt0Iq/ydIQ6Thwdd3R5uEPxW/vj83r/99HxDXEOUJCTk3P8
2v86BAjb2aMBewdiJa7RpmJQ7DVD+dT98EsWqYdsE+O7/OxblVQXbC/Zd8PH
RIzDr7v/vk31R3VXe7udkRhu/rK6P6nhOBUSZUvRF6PP9Kp9GjUBMm+vycgN
YtDVjyWlUDMh7yF30lJFDJpSpf7v1EIcexCrNDYqgrvHXYbkUxUEJZes2Dki
KBOa58ENLBjnf7PjiIMIW5wmhM+vcTAbzKNPy8YQ0bIb2dMv8S7moW5Szhg0
qtT65eVbEcZqEUZbj+HJoP2rVusOSAwaOFYdo6gPur3OQ9yJ6N/MS9z9RzGj
Z7Oi7OduNDy4rtczK4TCXOnKdVveghd4XpEbI4QF8XlyopyH8AxKa5eiEK8S
zFteGPKR4rzkaNz1D9DOEM0VTwyAHpA19HTpB4hk/P6u7YNQ6zRjXKKNoHCs
pln1+hCa4F5vPT4MVa0HHwUCAfyffY6nug0j9Wx1IF13BPm7hC02jQJI95UK
zsR+wNXQHSl++gKEm3Gqvn0uRPNQhsHc1w+/nHOtXWcMWx1vljeNDOJzUGee
QaQILucqDNdiEEa2iouBNWIs981u7KW/x8F7Oj9VaEzgaFuiT9/UACK0vDe9
9/wI27yoR6lOAzAWuyp3O0pwX8Wn+qQ/H6tXSJQ48xJo97VQ1yr3g8LKY2y+
9Qm5djeHopt5OGde07vs8CTM023Chi+8Q+n3vnSmdBJ79faTu5vfYkakuXIk
awrDUro0WNKD6hMHl2Tun0bmaKqndXE3Yg8l5leNTOMvvkeuTcwb6PQ59BQk
zqDtONeD792FPZYJmVQzKTYyIir9dnTCc0PrnDxXisuNNzbGanMx05w2GEqT
wVVllFjKdSCbcjrcWXcWzJ0TRaELbVjdX31PgTOLpinXjHGlNiyNprnsvjAH
vaKJqvg1LZArPs0YXDWP8kchI/aOr3Axl5G2qn4elnzD9JWXm1FnlKykdv4z
djaamw3UNUHN4aJxvOoXaCop9xpbNoJn0sa9UvsFapUWDUvvN+DxHegKTi8g
d5dR/DlbDrwYFmpaiwsINVVvp8jqEZd4l8YrWUR+axwvuPAZyoRaeapHCOq2
FtjciGQj+XaiT/9RAlrNHr2US2z4O49vKXcioEiqveNC2VhfW/vY0Y2gRD+J
ExrIRkr6qRepvgQuGtxjPzqzccYi59PyKwT5FutAM2RjU8KaQ4pFBO8V5jQv
/8PC4q4ole6HBBH0K+6VZSz0jg91FJUSKJtGGU4VsJDhVul1oIJg42O3lMgM
Foihc1hiLcHQSJbJw7Ms8NrT7yzhEhS2eBbErGfh3ySZH7eLIJtlJRWsYiHT
ytugoIfATaPzjeMyFg7f31Zl109gV/Yr9KVMPP3l9UvaKIE0+NG92VYmskx2
pjuJCRgmXm5hL5i4MHjLRecjwcuIH7IktUxsPRLMZ08T/JETXzFZzARFvrMw
Q0YQaN6eGkFnYqDaKshnnkCTXylZzGKiNqjAdPsCgf6BWl5yGhM3tZVnCCH4
Rj7quHoCE/8Bu2p7ng==
               "]]}, "Charting`Private`Tag#4"]}}, {}}, <|
         "HighlightElements" -> <|
           "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
          "LayoutOptions" -> <|
           "PlotRange" -> {{0, 2}, {0., 1.}}, 
            "Frame" -> {{False, False}, {False, False}}, 
            "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
            "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
            GoldenRatio^(-1), "DefaultStyle" -> {
              Directive[
               Opacity[1.], 
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[2]], 
              Directive[
               Opacity[1.], 
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[2]]}, 
            "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
                Identity[
                 Part[#, 1]], 
                Identity[
                 Part[#, 2]]}& ), 
              "ScalingFunctions" -> {{Identity, Identity}, {
                Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
            False|>, 
          "Meta" -> <|
           "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
            Plot, "GroupHighlight" -> False|>|>]]& )[<|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{0, 2}, {0., 1.}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {0, 0}, "ImageSize" -> {360, 360/GoldenRatio}, 
           "Axes" -> {True, True}, "LabelStyle" -> {}, "AspectRatio" -> 
           GoldenRatio^(-1), "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[2]], 
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[2]]}, 
           "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
               Identity[
                Part[#, 1]], 
               Identity[
                Part[#, 2]]}& ), 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           Plot, "GroupHighlight" -> False|>|>], 
       ImageSizeCache -> {{4.503599627370496*^15, -4.503599627370496*^15}, {
        4.503599627370496*^15, -4.503599627370496*^15}}]}, 
     Annotation[{{{{}, {}, 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJw913c819//P34is2EkURJJSJFk1PPxuJdINqFsEiVpWJVKMkKIIiOjzIyo
ZEtRkZWRLZtCnnuR/X0835/f7/X853m5Xh6X53mec27nfs55SDnfOOu6gY2N
jZODjY31re86+7PuryvK9r8PBdJFTEIjxJ7D/+9AnpL9j8Wy/7OVdcY7CrX0
P/OvB9rp7q79z/vMSLPfIuv/8+12TUhiNP9n0VLBUXb2jv9cPnnqRweu6z9/
dU/baU3o+c9MWWRr0bX+/7xh8Y3Azn2//rPaulO5+dvh//wjRLX9u8LYf5Z8
il/MJ43/Z/zC2Giv8uR/zp772LIleuo/DwYfHvHT/P2ft0jkkn///g3/1lkf
MhidOvTma8gfaPn/HHWl7FK6zDSErv2fT1q+z+HsmoY6+v95/sSb324BM2Ca
/H8uq6r4AVKz8Fl69X/2Uakv3f5tFtKt8P9zwU3tPT5ef+Ghpen/PPa2PvKn
1ByIzckvsZxe0LDpvPocJGy48o9l59ffnwwbzgH3cal5lmUyG7c4O8+ByWYF
OsvTaU0xM7fn4PJ3YzLLjTv1TAuC5kCTME9gOe9Fs8C1J3PQPaI/x/JjUf2f
SklzgDSjMyy7x7c8o2XOQeORhimWbXr4aOZ5c1D66tcEywbCBmfLiubA9HP7
GMu4s5EftpfMwYThqxGWFZ+1Ct2pnAOnCb0hlnd18nsPfpqDgZnWAZY3bTXs
PvZtDsJeSfexTIz6EbfaNgfLilqdLI+2bmI4dM/BzxDONpbb+Yws6gbmoDki
upnlz3pPSqVG50DBY7iB5bfhbduCp+agXnjuC8svGzf7/p6dA/99JZ9YjuEy
7tUhzYHnokoVyzdD2uN5FufA663WO5advm2Zv7KG9e95Yz7LZhtMzrVy4IEb
R8xiWetkTLkiLx5aFIvSWFZ52LE9egsengSwJbIsXbv1NlkYD196xmJYFl4z
6TcVw0Op4alwlhn3OhOFZfCQddPnNsu/qwX++cjjQT9S6TrLvYumVn2H8BD+
TM+F5e8azyrVVfGw/XmFNcvlt3/ueKGJh+I/14xZfl0u6LeE4kF6i5MWy4lM
s0FbbTw8qnl4lOU73l0vdpvgoalLWIxltw9CSwEWeCB0X+Jl2Zp61mbCGg9j
7vn/1jDrK8dVazniIUaseZrlYze6xbNd8JC050M3ywpvhe9tdMeDyxWTWpbF
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
            "]]}, "Charting`Private`Tag#1"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
8w==
            "]]}, "Charting`Private`Tag#2"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1: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
kn5tDg==
            "]]}, "Charting`Private`Tag#3"], 
         Annotation[{
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           Line[CompressedData["
1:eJwVzH08FHYAx3F0jfKiVKZTkhJ5Spmo0Df0qqZURFjEPK1kUZRlns6Qidgm
eahckUJchrZXuLt0Iq/ydIQ6Thwdd3R5uEPxW/vj83r/99HxDXEOUJCTk3P8
2v86BAjb2aMBewdiJa7RpmJQ7DVD+dT98EsWqYdsE+O7/OxblVQXbC/Zd8PH
RIzDr7v/vk31R3VXe7udkRhu/rK6P6nhOBUSZUvRF6PP9Kp9GjUBMm+vycgN
YtDVjyWlUDMh7yF30lJFDJpSpf7v1EIcexCrNDYqgrvHXYbkUxUEJZes2Dki
KBOa58ENLBjnf7PjiIMIW5wmhM+vcTAbzKNPy8YQ0bIb2dMv8S7moW5Szhg0
qtT65eVbEcZqEUZbj+HJoP2rVusOSAwaOFYdo6gPur3OQ9yJ6N/MS9z9RzGj
Z7Oi7OduNDy4rtczK4TCXOnKdVveghd4XpEbI4QF8XlyopyH8AxKa5eiEK8S
zFteGPKR4rzkaNz1D9DOEM0VTwyAHpA19HTpB4hk/P6u7YNQ6zRjXKKNoHCs
pln1+hCa4F5vPT4MVa0HHwUCAfyffY6nug0j9Wx1IF13BPm7hC02jQJI95UK
zsR+wNXQHSl++gKEm3Gqvn0uRPNQhsHc1w+/nHOtXWcMWx1vljeNDOJzUGee
QaQILucqDNdiEEa2iouBNWIs981u7KW/x8F7Oj9VaEzgaFuiT9/UACK0vDe9
9/wI27yoR6lOAzAWuyp3O0pwX8Wn+qQ/H6tXSJQ48xJo97VQ1yr3g8LKY2y+
9Qm5djeHopt5OGde07vs8CTM023Chi+8Q+n3vnSmdBJ79faTu5vfYkakuXIk
awrDUro0WNKD6hMHl2Tun0bmaKqndXE3Yg8l5leNTOMvvkeuTcwb6PQ59BQk
zqDtONeD792FPZYJmVQzKTYyIir9dnTCc0PrnDxXisuNNzbGanMx05w2GEqT
wVVllFjKdSCbcjrcWXcWzJ0TRaELbVjdX31PgTOLpinXjHGlNiyNprnsvjAH
vaKJqvg1LZArPs0YXDWP8kchI/aOr3Axl5G2qn4elnzD9JWXm1FnlKykdv4z
djaamw3UNUHN4aJxvOoXaCop9xpbNoJn0sa9UvsFapUWDUvvN+DxHegKTi8g
d5dR/DlbDrwYFmpaiwsINVVvp8jqEZd4l8YrWUR+axwvuPAZyoRaeapHCOq2
FtjciGQj+XaiT/9RAlrNHr2US2z4O49vKXcioEiqveNC2VhfW/vY0Y2gRD+J
ExrIRkr6qRepvgQuGtxjPzqzccYi59PyKwT5FutAM2RjU8KaQ4pFBO8V5jQv
/8PC4q4ole6HBBH0K+6VZSz0jg91FJUSKJtGGU4VsJDhVul1oIJg42O3lMgM
Foihc1hiLcHQSJbJw7Ms8NrT7yzhEhS2eBbErGfh3ySZH7eLIJtlJRWsYiHT
ytugoIfATaPzjeMyFg7f31Zl109gV/Yr9KVMPP3l9UvaKIE0+NG92VYmskx2
pjuJCRgmXm5hL5i4MHjLRecjwcuIH7IktUxsPRLMZ08T/JETXzFZzARFvrMw
Q0YQaN6eGkFnYqDaKshnnkCTXylZzGKiNqjAdPsCgf6BWl5yGhM3tZVnCCH4
Rj7quHoCE/8Bu2p7ng==
            "]]}, "Charting`Private`Tag#4"]}}, {}}, <|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, 2}, {0., 1.}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "LabelStyle" -> {}, "AspectRatio" -> GoldenRatio^(-1), 
         "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.922526, 0.385626, 0.209179], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.560181, 0.691569, 0.194885], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
    Axes -> {True, True}, AxesLabel -> {
      FormBox[
       TagBox["\"\[Epsilon] (\[Mu])\"", HoldForm], TraditionalForm], 
      FormBox[
       TagBox["\"n\"", HoldForm], TraditionalForm]}, AxesOrigin -> {0, 0}, 
    DisplayFunction -> Identity, Frame -> {{False, False}, {False, False}}, 
    FrameLabel -> {{None, None}, {None, None}}, 
    FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
    GridLines -> {None, None}, GridLinesStyle -> Directive[
      GrayLevel[0.5, 0.4]], ImagePadding -> All, 
    Method -> {
     "DefaultBoundaryStyle" -> Automatic, 
      "DefaultGraphicsInteraction" -> {
       "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
        "Effects" -> {
         "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
          "Droplines" -> {
           "freeformCursorMode" -> True, 
            "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
      "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None, 
      "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          (Identity[#]& )[
           Part[#, 1]], 
          (Identity[#]& )[
           Part[#, 2]]}& )}}, PlotRange -> {{0, 2}, {0., 1.}}, 
    PlotRangeClipping -> True, PlotRangePadding -> {{
       Scaled[0.02], 
       Scaled[0.02]}, {
       Scaled[0.05], 
       Scaled[0.05]}}, Ticks -> {Automatic, Automatic}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\[Beta]=0.01\"", "\"\[Beta]=0.1\"", "\"\[Beta]=0.2\"", 
       "\"\[Beta]=0.5\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {
                    LineBox[{{0, 12.5}, {20, 12.5}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 12.5}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.18000000000000002`] -> 
                    Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}]}], "]"}]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.926911641729493*^9, 3.92691186622272*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"7688a3fa-7232-41f1-bc74-d2002355c362"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", ":=", 
  TemplateBox[<|"query" -> "mass copper", "boxes" -> RowBox[{
       TemplateBox[{"\"copper\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Element\"", ",", "\"Copper\""}], "]"}], 
         "\"Entity[\\\"Element\\\", \\\"Copper\\\"]\"", "\"element\""}, 
        "Entity"], "[", 
       TemplateBox[{"\"atomic mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Element\"", ",", "\"AtomicMass\""}], "]"}], 
         "\"EntityProperty[\\\"Element\\\", \\\"AtomicMass\\\"]\""}, 
        "EntityProperty"], "]"}], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "mass", "template" -> 
       "Assuming \"mass\" is referring to elements${separator}Use as ${desc} \
or ${desc} instead", "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"C\", \"mass\"} -> {\"ElementProperty\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "ElementProperty", "desc" -> " referring to elements", 
          "input" -> "{\"C\", \"mass\"} -> {\"ElementProperty\"}"}, {
         "name" -> "ChemicalProperty", "desc" -> 
          " referring to chemical compounds", "input" -> 
          "{\"C\", \"mass\"} -> {\"ChemicalProperty\"}"}, {
         "name" -> "MineralProperty", "desc" -> " referring to minerals", 
          "input" -> "{\"C\", \"mass\"} -> {\"MineralProperty\"}"}}}, {
      "type" -> "SubCategory", "word" -> "mass", "template" -> 
       "Assuming atomic mass${separator}Use ${desc} or ${desc} instead", 
       "count" -> "3", "pulldown" -> "false", "default" -> 
       "{\"DPClash\", \"ElementP\", \"mass\"} -> {\"AtomicMass\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "AtomicMass", "desc" -> "atomic mass", "input" -> 
          "{\"DPClash\", \"ElementP\", \"mass\"} -> {\"AtomicMass\"}"}, {
         "name" -> "RelativeMass", "desc" -> "relative atomic mass", "input" -> 
          "{\"DPClash\", \"ElementP\", \"mass\"} -> {\"RelativeMass\"}"}, {
         "name" -> "MassDensity", "desc" -> "mass density", "input" -> 
          "{\"DPClash\", \"ElementP\", \"mass\"} -> {\"MassDensity\"}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.512827`6.6313342604212515, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"M", ":=", 
  TemplateBox[<|"query" -> "molar mass copper", "boxes" -> RowBox[{
       TemplateBox[{"\"copper\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Mineral\"", ",", "\"Copper\""}], "]"}], 
         "\"Entity[\\\"Mineral\\\", \\\"Copper\\\"]\"", "\"mineral\""}, 
        "Entity"], "[", 
       TemplateBox[{"\"molar mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Mineral\"", ",", "\"MolarMass\""}], "]"}], 
         "\"EntityProperty[\\\"Mineral\\\", \\\"MolarMass\\\"]\""}, 
        "EntityProperty"], "]"}], "allassumptions" -> {}, "assumptions" -> {},
     "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.004902`6.453668704073906, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"rho", ":=", 
  TemplateBox[<|"query" -> "density copper", "boxes" -> RowBox[{
       TemplateBox[{"\"copper\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Element\"", ",", "\"Copper\""}], "]"}], 
         "\"Entity[\\\"Element\\\", \\\"Copper\\\"]\"", "\"element\""}, 
        "Entity"], "[", 
       TemplateBox[{"\"mass density\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Element\"", ",", "\"MassDensity\""}], "]"}], 
         "\"EntityProperty[\\\"Element\\\", \\\"MassDensity\\\"]\""}, 
        "EntityProperty"], "]"}], "allassumptions" -> {}, "assumptions" -> {},
     "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.124502`6.502505225689314, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"hbar", ":=", 
  TemplateBox[<|"query" -> "hbar", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"\[HBar]\"", 
       "reduced Planck constants", "\"ReducedPlanckConstant\""}, "Quantity", 
      SyntaxForm -> Mod], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "hbar", "template" -> 
       "Assuming \"hbar\" is a unit${separator}Use as ${desc} instead", 
       "count" -> "2", "pulldown" -> "false", "default" -> 
       "{\"C\", \"hbar\"} -> {\"Unit\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"C\", \"hbar\"} -> {\"Unit\"}"}, {
         "name" -> "Character", "desc" -> "a character", "input" -> 
          "{\"C\", \"hbar\"} -> {\"Character\"}"}}}, {
      "type" -> "Unit", "word" -> "hbar", "template" -> 
       "Assuming reduced Planck constant for \"hbar\"${separator}Use ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
       "\"UnitClash\" -> {\"hbar\", {\"ReducedPlanckConstant\", \"dflt\"}}", 
       "Values" -> {{
         "name" -> "ReducedPlanckConstant", "desc" -> 
          "reduced Planck constant", "input" -> 
          "\"UnitClash\" -> {\"hbar\", {\"ReducedPlanckConstant\"}}"}, {
         "name" -> "Hectobars", "desc" -> "hectobars", "input" -> 
          "\"UnitClash\" -> {\"hbar\", {\"Hectobars\"}}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.814132`6.362239818807763, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"NA", ":=", 
  TemplateBox[<|"query" -> "avogadro constant", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       SubscriptBox[
        StyleBox["\"N\"", Italic, StripOnInput -> False], 
        StyleBox["\"A\"", Italic, StripOnInput -> False]], 
       "Avogadro constants", "\"AvogadroConstant\""}, "Quantity", SyntaxForm -> 
      Mod], "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.77379`6.340168106354862, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"k", ":=", 
  TemplateBox[<|"query" -> "boltzmann const", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"k\"", Italic, StripOnInput -> False], 
       "Boltzmann constants", "\"BoltzmannConstant\""}, "Quantity", 
      SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.941806`6.425506446388186, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"T", ":=", 
  TemplateBox[<|
   "query" -> "300 K", "boxes" -> 
    TemplateBox[{"300", "\"K\"", "kelvins", "\"Kelvins\""}, "Quantity", 
      SyntaxForm -> Mod], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "K", "template" -> 
       "Assuming \"K\" is a unit${separator}Use as ${desc} instead", "count" -> 
       "2", "pulldown" -> "false", "default" -> 
       "{\"C\", \"K\"} -> {\"Unit\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"C\", \"K\"} -> {\"Unit\"}"}, {
         "name" -> "Variable", "desc" -> "a variable", "input" -> 
          "{\"C\", \"K\"} -> {\"Variable\"}"}}}, {
      "type" -> "Unit", "word" -> "K", "template" -> 
       "Assuming kelvins of absolute temperature for \"K\"${separator}Use \
${desc} or ${pulldown} instead", "count" -> "5", "pulldown" -> "true", 
       "pulldownlabel" -> "more >>", "pulldownlength" -> "3", "default" -> 
       "\"UnitClash\" -> {\"K\", {\"Kelvins\", \"dflt\"}}", 
       "Values" -> {{
         "name" -> "Kelvins", "desc" -> "kelvins of absolute temperature", 
          "input" -> "\"UnitClash\" -> {\"K\", {\"Kelvins\"}}"}, {
         "name" -> "KelvinsDifference", "desc" -> "kelvins difference", 
          "input" -> "\"UnitClash\" -> {\"K\", {\"KelvinsDifference\"}}"}, {
         "name" -> "Kilobytes", "desc" -> "kilobytes (base 10)", "input" -> 
          "\"UnitClash\" -> {\"K\", {\"Kilobytes\"}}"}, {
         "name" -> "Kilometers", "desc" -> "kilometers", "input" -> 
          "\"UnitClash\" -> {\"K\", {\"Kilometers\"}}"}, {
         "name" -> "Karats", "desc" -> "karats of metal purity", "input" -> 
          "\"UnitClash\" -> {\"K\", {\"Karats\"}}"}}}}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.046693`6.4713643132292935, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"EF", "=", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"hbar", "^", "2"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", "m"}], ")"}]}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", 
        RowBox[{"Pi", "^", "2"}], "rho", " ", 
        RowBox[{"NA", "/", "M"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"2", "/", "3"}], ")"}]}]}], ",", "\"\<eV\>\""}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"TF", "=", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{"EF", "/", "k"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.926913306863496*^9, 3.9269133874861507`*^9}, {
  3.926913435324512*^9, 3.926913462337515*^9}, {3.9269135111409473`*^9, 
  3.92691353184515*^9}, {3.926945937095248*^9, 3.9269459513165493`*^9}, {
  3.92694605439324*^9, 3.9269460556203003`*^9}, {3.92694643235373*^9, 
  3.926946453331541*^9}},
 CellLabel->
  "In[173]:=",ExpressionUUID->"4229972e-ef1e-4222-a252-35ce79d644e2"],

Cell[BoxData[
 TemplateBox[{
  "0.00006081128609373144`", "\"eV\"", "electronvolts", "\"Electronvolts\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.926913378517337*^9, 3.926913387782762*^9}, {
   3.926913437550839*^9, 3.926913462630972*^9}, {3.926913515930138*^9, 
   3.926913532257668*^9}, 3.926946058643169*^9, {3.9269464333670397`*^9, 
   3.9269464538200703`*^9}},
 CellLabel->
  "Out[180]=",ExpressionUUID->"a02875b7-5a2e-4ac4-b650-85847b16985c"],

Cell[BoxData[
 TemplateBox[{"0.705685671469473`", "\"K\"", "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.926913378517337*^9, 3.926913387782762*^9}, {
   3.926913437550839*^9, 3.926913462630972*^9}, {3.926913515930138*^9, 
   3.926913532257668*^9}, 3.926946058643169*^9, {3.9269464333670397`*^9, 
   3.926946453821616*^9}},
 CellLabel->
  "Out[181]=",ExpressionUUID->"8e14bdfe-66ef-4888-82f1-5e9f44e49cb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "=", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"2", "/", "5"}], "*", "EF", "*", 
      RowBox[{"rho", "/", "M"}], "*", "NA"}], "+", 
     RowBox[{
      RowBox[{"Pi", "^", "2"}], "rho", "*", "NA", "*", 
      RowBox[{"k", "^", "2"}], "*", 
      RowBox[{
       RowBox[{"T", "^", "2"}], "/", 
       RowBox[{"(", 
        RowBox[{"6", "*", "M", "*", "EF"}], ")"}]}]}]}], ",", "\"\<bar\>\""}],
    "]"}]}]], "Input",
 CellChangeTimes->{{3.9269459153499613`*^9, 3.9269460649994164`*^9}, {
  3.926946130288286*^9, 3.9269461304578133`*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"c29c7ebd-f3f8-432a-9306-bef68dbb90bc"],

Cell[BoxData[
 TemplateBox[{"2.459274061440706`*^6", "\"bar\"", "bars", "\"Bars\""},
  "Quantity"]], "Output",
 CellChangeTimes->{{3.926945989195861*^9, 3.926946015912159*^9}, 
   3.926946065530396*^9, 3.9269461308530693`*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"04eef030-5b8d-4439-92dd-9e1b5bc1c390"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Ex.4", "Title",
 CellChangeTimes->{{3.9269463992426023`*^9, 3.9269464047129297`*^9}, {
   3.926946666627778*^9, 3.926946666667288*^9}, {3.926946725000877*^9, 
   3.9269467398087673`*^9}, 3.9269469571999283`*^9, {3.926950575552231*^9, 
   3.926950584966887*^9}},ExpressionUUID->"ac9998a4-6c68-4f33-927b-\
d18eab122496"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Upot", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "3"}], "/", "5"}], "G", "*", 
   RowBox[{
    RowBox[{"M", "^", "2"}], "/", "R"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"EF", ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"9", "Pi", " ", 
      RowBox[{"n", "/", "4"}]}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"2", "/", "3"}], ")"}]}], 
   RowBox[{
    RowBox[{"hbar", "^", "2"}], "/", 
    RowBox[{"(", 
     RowBox[{"2", "m", " ", 
      RowBox[{"R", "^", "2"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Ukin", ":=", 
  RowBox[{
   RowBox[{"3", "/", "5"}], "n", "*", "EF"}]}], "\[IndentingNewLine]", 
 RowBox[{"sol", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Ukin", "+", "Upot"}], ",", "R"}], "]"}], "==", "0"}], ",", 
      "R"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9269464960597143`*^9, 3.9269466538343763`*^9}, {
   3.9269467690684633`*^9, 3.92694677024305*^9}, 3.926946804000766*^9, {
   3.926946918530519*^9, 3.926947014090806*^9}, {3.9269470752806997`*^9, 
   3.9269471775479383`*^9}, {3.9269502314648*^9, 3.926950270859206*^9}, {
   3.926950320569645*^9, 3.926950323284432*^9}, {3.9269503669996777`*^9, 
   3.926950378298422*^9}, {3.9269504312377768`*^9, 3.926950515605579*^9}, {
   3.926950713651299*^9, 3.926950715544244*^9}},
 CellLabel->
  "In[382]:=",ExpressionUUID->"bd005952-0b8b-4bf0-806c-a367b44d99be"],

Cell[BoxData[
 RowBox[{"R", "\[Rule]", 
  FractionBox[
   RowBox[{"3", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      FractionBox["3", "2"], ")"}], 
     RowBox[{"1", "/", "3"}]], " ", 
    SuperscriptBox["hbar", "2"], " ", 
    SuperscriptBox["n", 
     RowBox[{"5", "/", "3"}]], " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"2", "/", "3"}]]}], 
   RowBox[{"2", " ", "G", " ", "m", " ", 
    SuperscriptBox["M", "2"]}]]}]], "Output",
 CellChangeTimes->{
  3.926946558933485*^9, {3.9269466510262747`*^9, 3.926946654233778*^9}, {
   3.926946761184266*^9, 3.9269467706746683`*^9}, 3.926946804474704*^9, 
   3.926946946104377*^9, 3.926947014739956*^9, 3.926947086906397*^9, {
   3.926947127474373*^9, 3.92694717787087*^9}, 3.9269502720641613`*^9, {
   3.9269504585625687`*^9, 3.9269505161359673`*^9}, 3.926950716305279*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"aa40d7a0-31b2-4071-9917-98d2bc34135d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"m", ":=", 
  TemplateBox[<|"query" -> "neutron mass", "boxes" -> RowBox[{
       TemplateBox[{"\"neutron\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Particle\"", ",", "\"Neutron\""}], "]"}], 
         "\"Entity[\\\"Particle\\\", \\\"Neutron\\\"]\"", "\"particle\""}, 
        "Entity"], "[", 
       TemplateBox[{"\"mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Particle\"", ",", "\"Mass\""}], "]"}], 
         "\"EntityProperty[\\\"Particle\\\", \\\"Mass\\\"]\""}, 
        "EntityProperty"], "]"}], 
    "allassumptions" -> {{
      "word" -> "", "template" -> 
       "Assuming \"neutron\" is a particle${separator}Use the input as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "type" -> 
       "MultiClash", "default" -> 
       "{\"MC\", \"\"} -> {\"Particle\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Particle", "desc" -> "a particle", "input" -> 
          "{\"MC\", \"\"} -> {\"Particle\"}", "word" -> "neutron"}, {
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"MC\", \"\"} -> {\"Unit\"}", "word" -> "the input"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.107868`6.496033011752407, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"hbar", ":=", 
  TemplateBox[<|"query" -> "hbar", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], "\"\[HBar]\"", 
       "reduced Planck constants", "\"ReducedPlanckConstant\""}, "Quantity", 
      SyntaxForm -> Mod], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "hbar", "template" -> 
       "Assuming \"hbar\" is a unit${separator}Use as ${desc} instead", 
       "count" -> "2", "pulldown" -> "false", "default" -> 
       "{\"C\", \"hbar\"} -> {\"Unit\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"C\", \"hbar\"} -> {\"Unit\"}"}, {
         "name" -> "Character", "desc" -> "a character", "input" -> 
          "{\"C\", \"hbar\"} -> {\"Character\"}"}}}, {
      "type" -> "Unit", "word" -> "hbar", "template" -> 
       "Assuming reduced Planck constant for \"hbar\"${separator}Use ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
       "\"UnitClash\" -> {\"hbar\", {\"ReducedPlanckConstant\", \"dflt\"}}", 
       "Values" -> {{
         "name" -> "ReducedPlanckConstant", "desc" -> 
          "reduced Planck constant", "input" -> 
          "\"UnitClash\" -> {\"hbar\", {\"ReducedPlanckConstant\"}}"}, {
         "name" -> "Hectobars", "desc" -> "hectobars", "input" -> 
          "\"UnitClash\" -> {\"hbar\", {\"Hectobars\"}}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.814132`6.362239818807763, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"k", ":=", 
  TemplateBox[<|"query" -> "boltzmann constant", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"k\"", Italic, StripOnInput -> False], 
       "Boltzmann constants", "\"BoltzmannConstant\""}, "Quantity", 
      SyntaxForm -> Mod], "allassumptions" -> {}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      0.978321`6.442026369403517, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"G", ":=", 
  TemplateBox[<|
   "query" -> "graviotational constant", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"G\"", Italic, StripOnInput -> False], 
       "Newtonian gravitational constants", "\"GravitationalConstant\""}, 
      "Quantity", SyntaxForm -> Mod], 
    "allassumptions" -> {{
      "type" -> "Clash", "word" -> "graviotational constant", "template" -> 
       "Assuming \"graviotational constant\" is a unit${separator}Use as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
       "{\"C\", \"graviotational constant\"} -> {\"Unit\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Unit", "desc" -> "a unit", "input" -> 
          "{\"C\", \"graviotational constant\"} -> {\"Unit\"}"}, {
         "name" -> "Word", "desc" -> "a word", "input" -> 
          "{\"C\", \"graviotational constant\"} -> {\"Word\"}"}}}, {
      "type" -> "Unit", "word" -> "graviotational constant", "template" -> 
       "Assuming Newtonian gravitational constant for \"graviotational \
constant\"${separator}Use ${desc} or ${desc} instead", "count" -> "3", 
       "pulldown" -> "false", "default" -> 
       "\"UnitClash\" -> {\"graviotational constant\", \
{\"GravitationalConstant\", \"dflt\"}}", 
       "Values" -> {{
         "name" -> "GravitationalConstant", "desc" -> 
          "Newtonian gravitational constant", "input" -> 
          "\"UnitClash\" -> {\"graviotational constant\", \
{\"GravitationalConstant\"}}"}, {
         "name" -> "GravitationalConstantWGS84", "desc" -> 
          "Newtonian gravitational constant (WGS84)", "input" -> 
          "\"UnitClash\" -> {\"graviotational constant\", \
{\"GravitationalConstantWGS84\"}}"}, {
         "name" -> "GaussianGravitationalConstant", "desc" -> 
          "Gaussian gravitational constant", "input" -> 
          "\"UnitClash\" -> {\"graviotational constant\", \
{\"GaussianGravitationalConstant\"}}"}}}}, "assumptions" -> {}, 
    "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.048322`6.472039693456737, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"c", ":=", 
  TemplateBox[<|"query" -> "speed of light", "boxes" -> TemplateBox[{
       InterpretationBox["\[InvisibleSpace]", 1], 
       StyleBox["\"c\"", Italic, StripOnInput -> False], "speed of light", 
       "\"SpeedOfLight\""}, "Quantity", SyntaxForm -> Mod], 
    "allassumptions" -> {}, "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.035957`6.466886722794874, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"M", ":=", 
  TemplateBox[<|"query" -> "sun mass", "boxes" -> RowBox[{
       TemplateBox[{"\"Sun\"", 
         RowBox[{"Entity", "[", 
           RowBox[{"\"Star\"", ",", "\"Sun\""}], "]"}], 
         "\"Entity[\\\"Star\\\", \\\"Sun\\\"]\"", "\"star\""}, "Entity"], "[", 
       TemplateBox[{"\"mass\"", 
         RowBox[{"EntityProperty", "[", 
           RowBox[{"\"Star\"", ",", "\"Mass\""}], "]"}], 
         "\"EntityProperty[\\\"Star\\\", \\\"Mass\\\"]\""}, "EntityProperty"],
        "]"}], "allassumptions" -> {{
      "type" -> "Clash", "word" -> "sun", "template" -> 
       "Assuming \"sun\" is referring to stars${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
       "{\"C\", \"sun\"} -> {\"Star\", \"dflt\"}", 
       "Values" -> {{
         "name" -> "Star", "desc" -> " referring to stars", "input" -> 
          "{\"C\", \"sun\"} -> {\"Star\"}"}, {
         "name" -> "CalendarEventName", "desc" -> "a weekday", "input" -> 
          "{\"C\", \"sun\"} -> {{\"CalendarEventName\", \"a weekday\"}}"}}}}, 
    "assumptions" -> {}, "open" -> {1, 2}, 
    "querystate" -> {
     "Online" -> True, "Allowed" -> True, "mparse.jsp" -> 
      1.209009`6.533974527306116, "Messages" -> {}}, "contextinfo" -> 
    Automatic, "version" -> 5|>,
   "LinguisticAssistantTemplate"]}], "\[IndentingNewLine]", 
 RowBox[{"n", ":=", 
  RowBox[{"M", "/", "m"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"R", "/.", "sol"}], "//", "UnitConvert"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"EF", "/.", "sol"}], ",", "\"\<MeV\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"UnitConvert", "[", 
  RowBox[{
   RowBox[{"EF", "/", "k"}], "/.", "sol"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Beta]", "=", 
  RowBox[{"UnitConvert", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"EF", "*", 
       RowBox[{"2", "/", "m"}]}], "]"}], "/", "c"}], "/.", "sol"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.926946774064789*^9, 3.9269468263408537`*^9}, {
  3.926950589312297*^9, 3.92695066401893*^9}, {3.926950772226654*^9, 
  3.92695083960112*^9}},
 CellLabel->
  "In[418]:=",ExpressionUUID->"ed51ada9-faf8-4359-b43c-2824632562a0"],

Cell[BoxData[
 TemplateBox[{
  "12335.1447275238813892061`3.107008922372614", "\"m\"", "meters", 
   "\"Meters\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.926946826740108*^9, 3.92695027549553*^9, 3.9269505186454897`*^9, {
   3.92695060817733*^9, 3.926950664299899*^9}, {3.926950807173066*^9, 
   3.926950839935117*^9}},
 CellLabel->
  "Out[425]=",ExpressionUUID->"e8eb6230-efaf-4c5b-aa69-b046f1013b6b"],

Cell[BoxData[
 TemplateBox[{
  "56.2368321436999208732`2.7702324747410003", "\"MeV\"", "megaelectronvolts",
    "\"Megaelectronvolts\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.926946826740108*^9, 3.92695027549553*^9, 3.9269505186454897`*^9, {
   3.92695060817733*^9, 3.926950664299899*^9}, {3.926950807173066*^9, 
   3.9269508399618597`*^9}},
 CellLabel->
  "Out[426]=",ExpressionUUID->"70557c4f-d238-4507-bc4a-464d65e0390a"],

Cell[BoxData[
 TemplateBox[{
  "6.526013377101359093172246903317`2.7702324747410003*^11", "\"K\"", 
   "kelvins", "\"Kelvins\""},
  "Quantity"]], "Output",
 CellChangeTimes->{
  3.926946826740108*^9, 3.92695027549553*^9, 3.9269505186454897`*^9, {
   3.92695060817733*^9, 3.926950664299899*^9}, {3.926950807173066*^9, 
   3.926950839982985*^9}},
 CellLabel->
  "Out[427]=",ExpressionUUID->"39814111-3061-4aa4-967c-7aeceee8b89d"],

Cell[BoxData["0.3459886971922360501`3.0712624448181343"], "Output",
 CellChangeTimes->{
  3.926946826740108*^9, 3.92695027549553*^9, 3.9269505186454897`*^9, {
   3.92695060817733*^9, 3.926950664299899*^9}, {3.926950807173066*^9, 
   3.9269508400016603`*^9}},
 CellLabel->
  "Out[428]=",ExpressionUUID->"ad51e966-ce41-40bc-9515-220ef09b0beb"]
}, Open  ]],

Cell["\<\
Bei \[Beta] = 0.346 (maximalgeschwindigkeit im fermigas) m\[UDoubleDot]sste \
man relativistische Effekte ber\[UDoubleDot]cksichtigen\
\>", "Text",
 CellChangeTimes->{{3.926950843149832*^9, 
  3.926950889350528*^9}},ExpressionUUID->"dc86bf1e-d614-4512-96fd-\
db0f8eac29e1"]
}, Open  ]]
},
WindowSize->{606, 683.25},
WindowMargins->{{273.75, Automatic}, {51, Automatic}},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"13.3 for Linux x86 (64-bit) (July 24, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"bae759bf-c1f2-46bb-ae64-c2e87076de41"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 149, 3, 98, "Title",ExpressionUUID->"e64daa3b-7f7a-4725-8226-e9c022b93138"],
Cell[CellGroupData[{
Cell[754, 29, 1229, 36, 94, "Input",ExpressionUUID->"9fa745d2-b54f-434a-98f9-8e60af8d5f0b"],
Cell[1986, 67, 116046, 2037, 240, "Output",ExpressionUUID->"7688a3fa-7232-41f1-bc74-d2002355c362"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118069, 2109, 10129, 197, 322, "Input",ExpressionUUID->"4229972e-ef1e-4222-a252-35ce79d644e2"],
Cell[128201, 2308, 457, 9, 44, "Output",ExpressionUUID->"a02875b7-5a2e-4ac4-b650-85847b16985c"],
Cell[128661, 2319, 434, 8, 44, "Output",ExpressionUUID->"8e14bdfe-66ef-4888-82f1-5e9f44e49cb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129132, 2332, 690, 19, 74, "Input",ExpressionUUID->"c29c7ebd-f3f8-432a-9306-bef68dbb90bc"],
Cell[129825, 2353, 309, 6, 44, "Output",ExpressionUUID->"04eef030-5b8d-4439-92dd-9e1b5bc1c390"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130183, 2365, 324, 5, 98, "Title",ExpressionUUID->"ac9998a4-6c68-4f33-927b-d18eab122496"],
Cell[CellGroupData[{
Cell[130532, 2374, 1649, 44, 112, "Input",ExpressionUUID->"bd005952-0b8b-4bf0-806c-a367b44d99be"],
Cell[132184, 2420, 910, 22, 62, "Output",ExpressionUUID->"aa40d7a0-31b2-4071-9917-98d2bc34135d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133131, 2447, 8821, 175, 331, "Input",ExpressionUUID->"ed51ada9-faf8-4359-b43c-2824632562a0"],
Cell[141955, 2624, 413, 10, 44, "Output",ExpressionUUID->"e8eb6230-efaf-4c5b-aa69-b046f1013b6b"],
Cell[142371, 2636, 437, 10, 44, "Output",ExpressionUUID->"70557c4f-d238-4507-bc4a-464d65e0390a"],
Cell[142811, 2648, 427, 10, 44, "Output",ExpressionUUID->"39814111-3061-4aa4-967c-7aeceee8b89d"],
Cell[143241, 2660, 341, 6, 33, "Output",ExpressionUUID->"ad51e966-ce41-40bc-9515-220ef09b0beb"]
}, Open  ]],
Cell[143597, 2669, 283, 6, 58, "Text",ExpressionUUID->"dc86bf1e-d614-4512-96fd-db0f8eac29e1"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

